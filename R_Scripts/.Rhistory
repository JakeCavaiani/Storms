id.na<-which(is.na(ts.xts))
for(i in id.na)
ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
# revert to dataframe #
ts.df = as.data.frame((ts.xts))
ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
names(ts.df) = c("dat_filled", "DateTime")
# remove large gaps #
ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
# Replace large gaps with linear interpolation #
ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
return(ts.df)
}
FRCH.no3 <- subset(FRCH.2021, select = c("DateTime", "nitrateuM"))
names(FRCH.no3) = c("DateTime", "nitrateuM")
FRCH.fDOM = subset(FRCH.2021, select = c("DateTime","fDOM.QSU"))
names(FRCH.fDOM) = c("DateTime", "fDOM.QSU")
frch.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = FRCH.fDOM) # Averaging 15 minute intervals
frch.no3.1 <- cut(FRCH.no3$DateTime, breaks="15 min")
frch.no3.final <- as.data.frame(aggregate(nitrateuM ~ frch.no3.1, data = FRCH.no3, FUN = mean)) # Averaging 15 minute intervals
frch.no3.final$DateTime <-as.POSIXct(frch.no3.final$frch.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
frch.no3.final$DateTime <- lubridate::round_date(frch.no3.final$DateTime, "15 minutes")
frch.spcond = subset(FRCH.2021, select = c("DateTime","SpCond.uScm"))
frch.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = frch.spcond) # Averaging 15 minute intervals
frch.spcond.1 <- cut(frch.spcond$DateTime, breaks = "15 min")
frch.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ frch.spcond.1, data = frch.spcond, FUN = mean)) # Averaging 15 minute intervals
frch.spcond.final$DateTime <-as.POSIXct(frch.spcond.final$frch.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
frch.spcond.final$DateTime <- lubridate::round_date(frch.spcond.final$DateTime, "15 minutes")
frch.turb = subset(FRCH.2021, select = c("DateTime","Turbidity.FNU"))
frch.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = frch.turb) # Averaging 15 minute intervals
frch.turb.1 <- cut(frch.turb$DateTime, breaks = "15 min")
frch.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ frch.turb.1, data = frch.turb, FUN = mean)) # Averaging 15 minute intervals
frch.turb.final$DateTime <-as.POSIXct(frch.turb.final$frch.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
frch.turb.final$DateTime <- lubridate::round_date(frch.spcond.final$DateTime, "15 minutes")
FRCH.2021.chem = left_join(frch.final.discharge.2021, frch.fdom.final, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.no3.final, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.spcond.final, by="DateTime")
FRCH.2021.chem = left_join(FRCH.2021.chem, frch.turb.final, by="DateTime")
FRCH.2021.chem <- FRCH.2021.chem[, -c(6,8,10)]
plot(FRCH.2021.chem$Q ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2021.chem$nitrateuM * 20 ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(FRCH.2021.chem$fDOM.QSU * 10 ~ FRCH.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
### STRT ###
STRT.no3 <- subset(STRT.2021, select = c("DateTime", "nitrateuM"))
names(STRT.no3) = c("DateTime", "nitrateuM")
STRT.fDOM = subset(STRT.2021, select = c("DateTime","fDOM.QSU"))
names(STRT.fDOM) = c("DateTime", "fDOM.QSU")
strt.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = STRT.fDOM) # Averaging 15 minute intervals
strt.no3.1 <- cut(STRT.no3$DateTime, breaks="15 min")
strt.no3.final <- as.data.frame(aggregate(nitrateuM ~ strt.no3.1, data = STRT.no3, FUN = mean)) # Averaging 15 minute intervals
strt.no3.final$DateTime <-as.POSIXct(strt.no3.final$strt.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
strt.spcond = subset(STRT.2021, select = c("DateTime","SpCond.uScm"))
strt.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = strt.spcond) # Averaging 15 minute intervals
strt.spcond.1 <- cut(strt.spcond$DateTime, breaks = "15 min")
strt.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ strt.spcond.1, data = strt.spcond, FUN = mean)) # Averaging 15 minute intervals
strt.spcond.final$DateTime <-as.POSIXct(strt.spcond.final$strt.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
strt.turb = subset(STRT.2021, select = c("DateTime","Turbidity.FNU"))
strt.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = strt.turb) # Averaging 15 minute intervals
strt.turb.1 <- cut(strt.turb$DateTime, breaks = "15 min")
strt.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ strt.turb.1, data = strt.turb, FUN = mean)) # Averaging 15 minute intervals
strt.turb.final$DateTime <-as.POSIXct(strt.turb.final$strt.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
STRT.2021.chem = left_join(strt.final.discharge.2021, strt.fdom.final, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.no3.final, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.spcond.final, by="DateTime")
STRT.2021.chem = left_join(STRT.2021.chem, strt.turb.final, by="DateTime")
STRT.2021.chem <- STRT.2021.chem[, -c(6,8,10)]
plot(STRT.2021.chem$Q ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(STRT.2021.chem$nitrateuM * 30 ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(STRT.2021.chem$fDOM.QSU * 20 ~ STRT.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
### POKE ###
POKE.no3 <- subset(POKE.2021, select = c("DateTime", "nitrateuM"))
names(POKE.no3) = c("DateTime", "nitrateuM")
POKE.fDOM = subset(POKE.2021, select = c("DateTime","fDOM.QSU"))
names(POKE.fDOM) = c("DateTime", "fDOM.QSU")
poke.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = POKE.fDOM) # Averaging 15 minute intervals
poke.no3.1 <- cut(POKE.no3$DateTime, breaks="15 min")
poke.no3.final <- as.data.frame(aggregate(nitrateuM ~ poke.no3.1, data = POKE.no3, FUN = mean)) # Averaging 15 minute intervals
poke.no3.final$DateTime <-as.POSIXct(poke.no3.final$poke.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.no3.final$DateTime <- lubridate::round_date(poke.no3.final$DateTime, "15 min")
poke.spcond = subset(POKE.2021, select = c("DateTime","SpCond.uScm"))
poke.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = poke.spcond) # Averaging 15 minute intervals
poke.spcond.1 <- cut(poke.spcond$DateTime, breaks = "15 min")
poke.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ poke.spcond.1, data = poke.spcond, FUN = mean)) # Averaging 15 minute intervals
poke.spcond.final$DateTime <-as.POSIXct(poke.spcond.final$poke.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.spcond.final$DateTime <- lubridate::round_date(poke.spcond.final$DateTime, "15 min")
poke.turb = subset(POKE.2021, select = c("DateTime","Turbidity.FNU"))
poke.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = poke.turb) # Averaging 15 minute intervals
poke.turb.1 <- cut(poke.turb$DateTime, breaks = "15 min")
poke.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ poke.turb.1, data = poke.turb, FUN = mean)) # Averaging 15 minute intervals
poke.turb.final$DateTime <-as.POSIXct(poke.turb.final$poke.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
poke.turb.final$DateTime <- lubridate::round_date(poke.turb.final$DateTime, "15 min")
POKE.2021.chem = left_join(poke.final.discharge.2021, poke.fdom.final, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.no3.final, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.spcond.final, by="DateTime")
POKE.2021.chem = left_join(POKE.2021.chem, poke.turb.final, by="DateTime")
POKE.2021.chem <- POKE.2021.chem[, -c(6,8,10)]
plot(POKE.2021.chem$Q ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(POKE.2021.chem$nitrateuM * 30 ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(POKE.2021.chem$fDOM.QSU * 30 ~ POKE.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
### VAUL ###
VAUL.no3 <- subset(VAUL.2021, select = c("DateTime", "nitrateuM"))
names(VAUL.no3) = c("DateTime", "nitrateuM")
VAUL.fDOM = subset(VAUL.2021, select = c("DateTime","fDOM.QSU"))
names(VAUL.fDOM) = c("DateTime", "fDOM.QSU")
vaul.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = VAUL.fDOM) # Averaging 15 minute intervals
vaul.no3.1 <- cut(VAUL.no3$DateTime, breaks="15 min")
vaul.no3.final <- as.data.frame(aggregate(nitrateuM ~ vaul.no3.1, data = VAUL.no3, FUN = mean)) # Averaging 15 minute intervals
vaul.no3.final$DateTime <-as.POSIXct(vaul.no3.final$vaul.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.no3.final$DateTime <- lubridate::round_date(vaul.no3.final$DateTime, "15 min")
vaul.spcond = subset(VAUL.2021, select = c("DateTime","SpCond.uScm"))
vaul.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = vaul.spcond) # Averaging 15 minute intervals
vaul.spcond.1 <- cut(vaul.spcond$DateTime, breaks = "15 min")
vaul.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ vaul.spcond.1, data = vaul.spcond, FUN = mean)) # Averaging 15 minute intervals
vaul.spcond.final$DateTime <-as.POSIXct(vaul.spcond.final$vaul.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.spcond.final$DateTime <- lubridate::round_date(vaul.spcond.final$DateTime, "15 min")
vaul.turb = subset(VAUL.2021, select = c("DateTime","Turbidity.FNU"))
vaul.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = vaul.turb) # Averaging 15 minute intervals
vaul.turb.1 <- cut(vaul.turb$DateTime, breaks = "15 min")
vaul.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ vaul.turb.1, data = vaul.turb, FUN = mean)) # Averaging 15 minute intervals
vaul.turb.final$DateTime <-as.POSIXct(vaul.turb.final$vaul.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
vaul.turb.final$DateTime <- lubridate::round_date(vaul.turb.final$DateTime, "15 min")
VAUL.2021.chem = left_join(vaul.final.discharge.2021, vaul.fdom.final, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.no3.final, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.spcond.final, by="DateTime")
VAUL.2021.chem = left_join(VAUL.2021.chem, vaul.turb.final, by="DateTime")
VAUL.2021.chem <- VAUL.2021.chem[, -c(6,8,10)]
plot(VAUL.2021.chem$MeanDischarge ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2021.chem$nitrateuM * 20 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(VAUL.2021.chem$fDOM.QSU * 1 ~ VAUL.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-06-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
### MOOS ###
MOOS.no3 <- subset(MOOS.2021, select = c("DateTime", "nitrateuM"))
names(MOOS.no3) = c("DateTime", "nitrateuM")
MOOS.fDOM = subset(MOOS.2021, select = c("DateTime","fDOM.QSU"))
names(MOOS.fDOM) = c("DateTime", "fDOM.QSU")
moos.fdom.final = aggregate(fDOM.QSU ~ DateTime, FUN=mean, data = MOOS.fDOM) # Averaging 15 minute intervals
moos.no3.1 <- cut(MOOS.no3$DateTime, breaks="15 min")
moos.no3.final <- as.data.frame(aggregate(nitrateuM ~ moos.no3.1, data = MOOS.no3, FUN = mean)) # Averaging 15 minute intervals
moos.no3.final$DateTime <-as.POSIXct(moos.no3.final$moos.no3.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.no3.final$DateTime <- lubridate::round_date(moos.no3.final$DateTime, "15 min")
moos.spcond = subset(MOOS.2021, select = c("DateTime","SpCond.uScm"))
moos.spcond.final = aggregate(SpCond.uScm ~ DateTime, FUN=mean, data = moos.spcond) # Averaging 15 minute intervals
moos.spcond.1 <- cut(moos.spcond$DateTime, breaks = "15 min")
moos.spcond.final <- as.data.frame(aggregate(SpCond.uScm ~ moos.spcond.1, data = moos.spcond, FUN = mean)) # Averaging 15 minute intervals
moos.spcond.final$DateTime <-as.POSIXct(moos.spcond.final$moos.spcond.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.spcond.final$DateTime <- lubridate::round_date(moos.spcond.final$DateTime, "15 min")
moos.turb = subset(MOOS.2021, select = c("DateTime","Turbidity.FNU"))
moos.turb.final = aggregate(Turbidity.FNU ~ DateTime, FUN=mean, data = moos.turb) # Averaging 15 minute intervals
moos.turb.1 <- cut(moos.turb$DateTime, breaks = "15 min")
moos.turb.final <- as.data.frame(aggregate(Turbidity.FNU ~ moos.turb.1, data = moos.turb, FUN = mean)) # Averaging 15 minute intervals
moos.turb.final$DateTime <-as.POSIXct(moos.turb.final$moos.turb.1, "%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
moos.turb.final$DateTime <- lubridate::round_date(moos.turb.final$DateTime, "15 min")
MOOS.2021.chem = left_join(moos.final.discharge.2021, moos.fdom.final, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.no3.final, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.spcond.final, by="DateTime")
MOOS.2021.chem = left_join(MOOS.2021.chem, moos.turb.final, by="DateTime")
MOOS.2021.chem <- MOOS.2021.chem[, -c(6,8,10)]
plot(MOOS.2021.chem$MeanDischarge ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2021.chem$nitrateuM * 60 ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="", col="purple",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
lines(MOOS.2021.chem$fDOM.QSU * 15 ~ MOOS.2021.chem$DateTime, type="l", xlab="", ylab="", col="maroon",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"))
DOD.2021.1 <- rbind(FRCH.2021.chem, MOOS.2021.chem, POKE.2021.chem, VAUL.2021.chem, STRT.2021.chem)
any(is.na(FRCH.Q.2021$day))
any(is.na(FRCH.Q.2021$Discharge_Lsec))
FRCH.Q.2021 <- na.omit(FRCH.Q.2021) # Remove 62 NaNs  # 150 rows to 88 rows # first half of the season lost data
any(is.na(STRT.Q.2021$day))
any(is.na(STRT.Q.2021$Discharge_Lsec))
STRT.Q.2021 <- na.omit(STRT.Q.2021) # Remove 8 NaNs # 150 to 142
any(is.na(POKE.Q.2021$day))
any(is.na(POKE.Q.2021$Discharge_Lsec))
POKE.Q.2021 <- na.omit(POKE.Q.2021) # Remove 19 NaNs # 150 to 131
any(is.na(VAUL.Q.2021$day))
any(is.na(VAUL.Q.2021$Discharge_Lsec))
VAUL.Q.2021 <- na.omit(VAUL.Q.2021) # Remove 61 NaNs #150 to 89
any(is.na(MOOS.Q.2021$day))
any(is.na(MOOS.Q.2021$Discharge_Lsec))
MOOS.Q.2021 <- na.omit(MOOS.Q.2021) # Remove 62 NaNs 150 to 88
any(is.na(CARI.Q.2021$day))
any(is.na(CARI.Q.2021$Discharge_Lsec))
CARI.Q.2021 <- na.omit(CARI.Q.2021) # Removed 14 rows - (160 to 132)
frch.final.discharge.2021$MeanDischarge <- frch.final.discharge.2021$Q
moos.final.discharge.2021$MeanDischarge <- moos.final.discharge.2021$Q
poke.final.discharge.2021$MeanDischarge <- poke.final.discharge.2021$Q
vaul.final.discharge.2021$MeanDischarge <- vaul.final.discharge.2021$Q
strt.final.discharge.2021$MeanDischarge <- strt.final.discharge.2021$Q
#
plot(poke.final.discharge.2021$MeanDischarge ~ poke.final.discharge.2021$DateTime, type="l", xlab="", ylab="Q (L/sec)",
xlim = as.POSIXct(c("2021-05-01 00:00:00","2021-10-01 00:00:00"), tz="America/Anchorage"),
ylim = c(0,2000), col="blue")
poke.final.discharge.2021.1 <- na.omit(poke.final.discharge.2021)
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt)
library(EcoHydRology)
POKE_Q_bf = BaseflowSeparation(poke.final.discharge.2021.1$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE.Q.2021, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt)
POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2
POKE.st <- read_csv("~/Documents/DoD_2021/RainGauge/POKE.RainGauge.2021.csv")
attributes(POKE.st$DateTime)$tzone <- 'America/Anchorage'
poke.precip.discharge <- full_join(poke.final.discharge.2021, POKE.st) # merging precip data and discharge
poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10
poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10
POKE_storm7b_08_19 = POKE[POKE$DateTime > as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage") &
POKE$DateTime < as.POSIXct("2021-08-22 07:30:00", tz="America/Anchorage"),]
POKE <- POKE.2021.chem
POKE$MeanDischarge <- POKE$Q
POKE_storm7b_08_19 = POKE[POKE$DateTime > as.POSIXct("2021-08-19 13:30:00", tz="America/Anchorage") &
POKE$DateTime < as.POSIXct("2021-08-22 07:30:00", tz="America/Anchorage"),]
POKE_storm7b_08_19_Q = subset(POKE_storm7b_08_19, select = c("DateTime","MeanDischarge"))
names(POKE_storm7b_08_19_Q) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_NO3 = subset(POKE_storm7b_08_19, select = c("DateTime","nitrateuM"))
names(POKE_storm7b_08_19_NO3) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_fDOM = subset(POKE_storm7b_08_19, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7b_08_19_fDOM) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_SPC = subset(POKE_storm7b_08_19, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7b_08_19_SPC) = c("valuedatetime","datavalue")
POKE_storm7b_08_19_turb = subset(POKE_storm7b_08_19, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7b_08_19_turb) = c("valuedatetime","datavalue")
write.csv(POKE_storm7b_08_19, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19.csv")
write.csv(POKE_storm7b_08_19_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_Q.csv")
write.csv(POKE_storm7b_08_19_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_NO3.csv")
write.csv(POKE_storm7b_08_19_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_fDOM.csv")
write.csv(POKE_storm7b_08_19_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_SPC.csv")
write.csv(POKE_storm7b_08_19_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7b_08_19_Turb.csv")
library(readr)
POKE_storm7b_08_19 <- read_csv("Storm_Events/2021/All_Sites/POKE_storm7b_08_19.csv")
View(POKE_storm7b_08_19)
POKE_storm7c_08_23 = POKE[POKE$DateTime > as.POSIXct("2021-08-23 07:30:00", tz="America/Anchorage") &
POKE$DateTime < as.POSIXct("2021-08-23 08:30:00", tz="America/Anchorage"),]
POKE_storm7c_08_23_Q = subset(POKE_storm7c_08_23, select = c("DateTime","MeanDischarge"))
names(POKE_storm7c_08_23_Q) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_NO3 = subset(POKE_storm7c_08_23, select = c("DateTime","nitrateuM"))
names(POKE_storm7c_08_23_NO3) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_fDOM = subset(POKE_storm7c_08_23, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7c_08_23_fDOM) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_SPC = subset(POKE_storm7c_08_23, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7c_08_23_SPC) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_turb = subset(POKE_storm7c_08_23, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7c_08_23_turb) = c("valuedatetime","datavalue")
write.csv(POKE_storm7c_08_23, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23.csv")
write.csv(POKE_storm7c_08_23_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Q.csv")
write.csv(POKE_storm7c_08_23_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_NO3.csv")
write.csv(POKE_storm7c_08_23_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_fDOM.csv")
write.csv(POKE_storm7c_08_23_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_SPC.csv")
write.csv(POKE_storm7c_08_23_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Turb.csv")
library(readr)
POKE_storm7c_08_23 <- read_csv("Storm_Events/2021/All_Sites/POKE_storm7c_08_23.csv")
View(POKE_storm7c_08_23)
POKE_storm7c_08_23 = POKE[POKE$DateTime > as.POSIXct("2021-08-23 07:30:00", tz="America/Anchorage") &
POKE$DateTime < as.POSIXct("2021-08-24 08:30:00", tz="America/Anchorage"),]
POKE_storm7c_08_23_Q = subset(POKE_storm7c_08_23, select = c("DateTime","MeanDischarge"))
names(POKE_storm7c_08_23_Q) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_NO3 = subset(POKE_storm7c_08_23, select = c("DateTime","nitrateuM"))
names(POKE_storm7c_08_23_NO3) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_fDOM = subset(POKE_storm7c_08_23, select = c("DateTime","fDOM.QSU"))
names(POKE_storm7c_08_23_fDOM) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_SPC = subset(POKE_storm7c_08_23, select = c("DateTime","SpCond.uScm"))
names(POKE_storm7c_08_23_SPC) = c("valuedatetime","datavalue")
POKE_storm7c_08_23_turb = subset(POKE_storm7c_08_23, select = c("DateTime","Turbidity.FNU"))
names(POKE_storm7c_08_23_turb) = c("valuedatetime","datavalue")
write.csv(POKE_storm7c_08_23, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23.csv")
write.csv(POKE_storm7c_08_23_Q, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Q.csv")
write.csv(POKE_storm7c_08_23_NO3, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_NO3.csv")
write.csv(POKE_storm7c_08_23_fDOM, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_fDOM.csv")
write.csv(POKE_storm7c_08_23_SPC, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_SPC.csv")
write.csv(POKE_storm7c_08_23_turb, "~/Documents/Storms/Storm_Events/2021/POKE/POKE_storm7c_08_23_Turb.csv")
library(readr)
POKE_storm7c_08_23 <- read_csv("Storm_Events/2021/All_Sites/POKE_storm7c_08_23.csv")
View(POKE_storm7c_08_23)
POKE_storms$storm.num = c(rep("storm1", 235),
rep("storm2", 191),
rep("storm3", 167),
rep("storm4", 575),
rep("storm5", 1106),
rep("storm6", 479),
rep("storm7a", 1355),
rep("storm7b", 791),
rep("storm7c", 299),
rep("storm7d", 443))
library(readr)
POKE_storm7d_08_26 <- read_csv("Storm_Events/2021/All_Sites/POKE_storm7d_08_26.csv")
View(POKE_storm7d_08_26)
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/",
recursive=F,
pattern="POKE",
full.names=TRUE)
POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
POKE_storms$storm.num = c(rep("storm1", 235),
rep("storm2", 191),
rep("storm3", 167),
rep("storm4", 575),
rep("storm5", 1106),
rep("storm6", 479),
rep("storm7a", 1355),
rep("storm7b", 791),
rep("storm7c", 299),
rep("storm7d", 443))
POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
names(POKE.2021.storms.1)[names(POKE.2021.storms.1) == ''] <- 'x'
POKE.2021.storms.1<- left_join(POKE_storms, POKE_RainGauge_2021, by = "DateTime")
names(POKE.2021.storms.1)[names(POKE.2021.storms.1) == ''] <- 'x'
POKE.2021.per.storm.1 <- POKE.2021.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
POKE_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/POKE.RainGauge.2021.csv")
VAUL_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/VAUL.RainGauge.2021.csv")
STRT_RainGauge_2021 <- read_csv("~/Documents/DoD_2021/RainGauge/STRT.RainGauge.2021.csv")
# convert to AK time
attributes(POKE_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
attributes(VAUL_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
attributes(STRT_RainGauge_2021$DateTime)$tzone <- 'America/Anchorage'
# round to nearest 15 min
POKE_RainGauge_2021$DateTime <- lubridate::floor_date(POKE_RainGauge_2021$DateTime, "15 minutes")
VAUL_RainGauge_2021$DateTime <- lubridate::floor_date(VAUL_RainGauge_2021$DateTime, "15 minutes")
STRT_RainGauge_2021$DateTime <- lubridate::floor_date(STRT_RainGauge_2021$DateTime, "15 minutes")
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/",
recursive=F,
pattern="POKE",
full.names=TRUE)
POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
POKE_storms$storm.num = c(rep("storm1", 235),
rep("storm2", 191),
rep("storm3", 167),
rep("storm4", 575),
rep("storm5", 1106),
rep("storm6", 479),
rep("storm7a", 1355),
rep("storm7b", 791),
rep("storm7c", 299),
rep("storm7d", 443))
POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
POKE.2021.storms.1<- left_join(POKE_storms, POKE_RainGauge_2021, by = "DateTime")
names(POKE.2021.storms.1)[names(POKE.2021.storms.1) == ''] <- 'x'
POKE.2021.per.storm.1 <- POKE.2021.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
View(POKE.2021.storms.1)
POKE.2021 <- read_csv("~/Documents/Storms/Q_Chem/POKE/POKE_chem_2021.csv")
attributes(POKE.2021$DateTime)$tzone <- 'America/Anchorage'
View(POKE.2021)
POKE.2021 <- left_join(POKE.2021, POKE_RainGauge_2021, by = "DateTime")
class(POKE.2021.storms.1)
POKE.2021.per.storm.1 <- POKE.2021.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
library(readr)
VAUL_storm1a_07_23 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm1a_07_23.csv")
View(VAUL_storm1a_07_23)
library(readr)
VAUL_storm1b_07_27 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm1b_07_27.csv")
View(VAUL_storm1b_07_27)
library(readr)
VAUL_storm2_08_05 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm2_08_05.csv")
View(VAUL_storm2_08_05)
library(readr)
VAUL_storm3_08_08 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm3_08_08.csv")
View(VAUL_storm3_08_08)
library(readr)
VAUL_storm4a_08_15 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm4a_08_15.csv")
View(VAUL_storm4a_08_15)
library(readr)
VAUL_storm4b_08_20 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm4b_08_20.csv")
View(VAUL_storm4b_08_20)
library(readr)
VAUL_storm5a_08_23 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm5a_08_23.csv")
View(VAUL_storm5a_08_23)
library(readr)
VVAUL_storm5b_08_26 <- read_csv("Storm_Events/2021/All_Sites/VVAUL_storm5b_08_26.csv")
View(VVAUL_storm5b_08_26)
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/",
recursive=F,
pattern="VAUL",
full.names=TRUE)
VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
VAUL_storms$storm.num = c(rep("storm1a", 1127),
rep("storm1b", 1397),
rep("storm2", 203),
rep("storm3", 2004),
rep("storm4a", 1283),
rep("storm4b", 959),
rep("storm5a", 996),
rep("storm5b", 1151))
library(readr)
VAUL_storm1a_07_23 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm1a_07_23.csv")
View(VAUL_storm1a_07_23)
library(readr)
VAUL_storm1b_07_27 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm1b_07_27.csv")
View(VAUL_storm1b_07_27)
library(readr)
VAUL_storm2_08_05 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm2_08_05.csv")
View(VAUL_storm2_08_05)
library(readr)
VAUL_storm3_08_08 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm3_08_08.csv")
View(VAUL_storm3_08_08)
library(readr)
VAUL_storm4a_08_15 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm4a_08_15.csv")
View(VAUL_storm4a_08_15)
library(readr)
VAUL_storm4b_08_20 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm4b_08_20.csv")
View(VAUL_storm4b_08_20)
library(readr)
VAUL_storm5a_08_23 <- read_csv("Storm_Events/2021/All_Sites/VAUL_storm5a_08_23.csv")
View(VAUL_storm5a_08_23)
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/",
recursive=F,
pattern="STRT",
full.names=TRUE)
STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
library(readr)
STRT_storm1a_08_15 <- read_csv("Storm_Events/2021/All_Sites/STRT_storm1a_08_15.csv")
View(STRT_storm1a_08_15)
library(readr)
STRT_storm1b_08_17 <- read_csv("Storm_Events/2021/All_Sites/STRT_storm1b_08_17.csv")
View(STRT_storm1b_08_17)
library(readr)
STRT_storm2a_08_19 <- read_csv("Storm_Events/2021/All_Sites/STRT_storm2a_08_19.csv")
View(STRT_storm2a_08_19)
library(readr)
STRT_storm2b_08_20 <- read_csv("Storm_Events/2021/All_Sites/STRT_storm2b_08_20.csv")
View(STRT_storm2b_08_20)
library(readr)
STRT_storm3_08_25 <- read_csv("Storm_Events/2021/All_Sites/STRT_storm3_08_25.csv")
View(STRT_storm3_08_25)
CARIstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2021/All_Sites/",
recursive=F,
pattern="CARI",
full.names=TRUE)
CARI_storms<-do.call("rbind", lapply(CARIstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
View(CARI_storms)
library(readr)
CARI_storm1_05_16 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm1_05_16.csv")
View(CARI_storm1_05_16)
library(readr)
CARI_storm2_06_01 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm2_06_01.csv")
View(CARI_storm2_06_01)
library(readr)
CARI_storm2_06_19 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm2_06_19.csv")
View(CARI_storm2_06_19)
library(readr)
CARI_storm2_06_19 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm2_06_19.csv")
View(CARI_storm2_06_19)
library(readr)
CARI_storm4_07_24 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm4_07_24.csv")
View(CARI_storm4_07_24)
library(readr)
CARI_storm5_07_27 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm5_07_27.csv")
View(CARI_storm5_07_27)
library(readr)
CARI_storm6_08_08 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm6_08_08.csv")
View(CARI_storm6_08_08)
library(readr)
CARI_storm7_08_15 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm7_08_15.csv")
View(CARI_storm7_08_15)
library(readr)
CARI_storm8_08_20 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm8_08_20.csv")
View(CARI_storm8_08_20)
library(readr)
CARI_storm9_08_23 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm9_08_23.csv")
View(CARI_storm9_08_23)
library(readr)
CARI_storm10_08_27 <- read_csv("Storm_Events/2021/All_Sites/CARI_storm10_08_27.csv")
View(CARI_storm10_08_27)
CARI_storms$storm.num = c(rep("storm1", 2519),
rep("storm2", 2099),
rep("storm3", 2399),
rep("storm4", 1919),
rep("storm5", 5939),
rep("storm6", 5916),
rep("storm7", 6566),
rep("storm8", 4859),
rep("storm9", 1619),
rep("storm10", 3659))
HI.dat <- read_csv("~/Documents/Storms/Output_from_analysis/HI.dat.csv")
HI.mean<- HI.dat %>% group_by(site.ID, response, year) %>%
summarise_at(vars(HI), list(HI = median)) # take mean by site response and year
reticulate::repl_python()
