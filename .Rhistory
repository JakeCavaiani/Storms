header=T, blank.lines.skip = TRUE, fill=TRUE))
# FRCH #
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/",
recursive=F,
pattern="FRCH",
full.names=TRUE)
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
# FRCH #
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/",
recursive=F,
pattern="FRCH",
full.names=TRUE)
FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
View(FRCH_storms)
FRCH_storms$storm.num = c(rep("storm1", 487),
rep("storm10a", 255),
rep("storm10b", 455),
rep("storm11", 91),
rep("storm12", 67),
rep("storm2", 107),
rep("storm3a", 159),
rep("storm3b", 431),
rep("storm3c", 159),
rep("storm4a", 187),
rep("storm4b", 203),
rep("storm5", 28),
rep("storm6", 103),
rep("storm7", 339),
rep("storm8", 383),
rep("storm9a", 139),
rep("storm9b", 272))
FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH.2020.storms.1<- left_join(FRCH_storms, FRCH_RainGauge_2020, by = "DateTime")
names(FRCH.2020.storms.1)[names(FRCH.2020.storms.1) == ''] <- 'x'
FRCH.2020.per.storm.1 <- FRCH.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "turb")
HI.frch.no3 <- left_join(HI.mean.precip.frch.NO3, FRCH.2020.per.storm.1, by = "storm.num")
frch.lm.no3 <- lm(HI.frch.no3$HI ~ HI.frch.no3$precip) # model one with just total precip
frch.formula <- y ~ x
HI.frch.no3 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.frch.fDOM <- left_join(HI.mean.precip.frch.fDOM, FRCH.2020.per.storm.1, by = "storm.num")
frch.lm.fDOM <- lm(HI.frch.fDOM$HI ~ HI.frch.fDOM$precip) # model one with just total precip
frch.formula <- y ~ x
HI.frch.fDOM %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.frch.SPC <- left_join(HI.mean.precip.frch.SPC, FRCH.2020.per.storm.1, by = "storm.num")
frch.lm.SPC <- lm(HI.frch.SPC$HI ~ HI.frch.SPC$precip) # model one with just total precip
HI.frch.SPC %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.frch.turb <- left_join(HI.mean.precip.frch.turb, FRCH.2020.per.storm.1, by = "storm.num")
frch.lm.turb <- lm(HI.frch.turb$HI ~ HI.frch.turb$precip) # model one with just total precip
HI.frch.turb %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sum.time <- FRCH.2020.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.frch.no3.2 <- left_join(HI.frch.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.frch.no3.2$TOTAL.TIME <- as.numeric(HI.frch.no3.2$TOTAL.TIME)
HI.frch.no3.2$Intensity <- HI.frch.no3.2$precip/HI.frch.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
frch.lm.no3.2 <- lm(HI.frch.no3.2$HI ~ HI.frch.no3.2$precip + HI.frch.no3.2$Intensity) # model one with total precip and intensity
HI.frch.no3.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.frch.fDOM.2 <- left_join(HI.frch.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.frch.fDOM.2$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2$TOTAL.TIME)
HI.frch.fDOM.2$Intensity <- HI.frch.fDOM.2$precip/HI.frch.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2$HI ~ HI.frch.fDOM.2$precip + HI.frch.fDOM.2$Intensity) # model one with total precip and intensity
HI.frch.fDOM.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.frch.SPC.2 <- left_join(HI.frch.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.frch.SPC.2$TOTAL.TIME <- as.numeric(HI.frch.SPC.2$TOTAL.TIME)
HI.frch.SPC.2$Intensity <- HI.frch.SPC.2$precip/HI.frch.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
frch.lm.SPC.2 <- lm(HI.frch.SPC.2$HI ~ HI.frch.SPC.2$precip + HI.frch.SPC.2$Intensity) # model one with total precip and intensity
HI.frch.SPC.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.frch.turb.2 <- left_join(HI.frch.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.frch.turb.2$TOTAL.TIME <- as.numeric(HI.frch.turb.2$TOTAL.TIME)
HI.frch.turb.2$Intensity <- HI.frch.turb.2$precip/HI.frch.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
frch.lm.turb.2 <- lm(HI.frch.turb.2$HI ~ HI.frch.turb.2$precip + HI.frch.turb.2$Intensity) # model one with total precip and intensity
HI.frch.turb.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("FRCH turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# VAUL #
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/",
recursive=F,
pattern="VAUL",
full.names=TRUE)
VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
# VAUL #
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/",
recursive=F,
pattern="VAUL",
full.names=TRUE)
VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
View(VAUL_storms)
VAUL_storms$storm.num = c(rep("storm10", 195),
rep("storm11", 400),
rep("storm12", 171),
rep("storm13", 319),
rep("storm14", 227),
rep("storm1a", 107),
rep("storm1b", 238),
rep("storm1c", 502),
rep("storm2", 210),
rep("storm3", 338),
rep("storm4", 322),
rep("storm5", 222),
rep("storm6a", 107),
rep("storm6b", 507),
rep("storm7", 284),
rep("storm8", 91),
rep("storm9", 91))
VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
VAUL.2020.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2020, by = "DateTime")
names(VAUL.2020.storms.1)[names(VAUL.2020.storms.1) == ''] <- 'x'
VAUL.2020.per.storm.1 <- VAUL.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "turb")
HI.vaul.no3 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2020.per.storm.1, by = "storm.num")
vaul.lm.no3 <- lm(HI.vaul.no3$HI ~ HI.vaul.no3$precip) # model one with just total precip
vaul.formula <- y ~ x
HI.vaul.no3 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.vaul.fDOM <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2020.per.storm.1, by = "storm.num")
vaul.lm.fDOM <- lm(HI.vaul.fDOM$HI ~ HI.vaul.fDOM$precip) # model one with just total precip
HI.vaul.fDOM %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.vaul.SPC <- left_join(HI.mean.precip.vaul.SPC, VAUL.2020.per.storm.1, by = "storm.num")
vaul.lm.SPC <- lm(HI.vaul.SPC$HI ~ HI.vaul.SPC$precip) # model one with just total precip
HI.vaul.SPC %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.vaul.turb <- left_join(HI.mean.precip.vaul.turb, VAUL.2020.per.storm.1, by = "storm.num")
vaul.lm.turb <- lm(HI.vaul.turb$HI ~ HI.vaul.turb$precip) # model one with just total precip
HI.vaul.turb %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sum.time <- VAUL.2020.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.vaul.no3.2 <- left_join(HI.vaul.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.vaul.no3.2$TOTAL.TIME <- as.numeric(HI.vaul.no3.2$TOTAL.TIME)
HI.vaul.no3.2$Intensity <- HI.vaul.no3.2$precip/HI.vaul.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
vaul.lm.no3.2 <- lm(HI.vaul.no3.2$HI ~ HI.vaul.no3.2$precip + HI.vaul.no3.2$Intensity) # model one with total precip and intensity
HI.vaul.no3.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.vaul.fDOM.2 <- left_join(HI.vaul.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.vaul.fDOM.2$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2$TOTAL.TIME)
HI.vaul.fDOM.2$Intensity <- HI.vaul.fDOM.2$precip/HI.vaul.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2$HI ~ HI.vaul.fDOM.2$precip + HI.vaul.fDOM.2$Intensity) # model one with total precip and intensity
HI.vaul.fDOM.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.vaul.SPC.2 <- left_join(HI.vaul.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.vaul.SPC.2$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2$TOTAL.TIME)
HI.vaul.SPC.2$Intensity <- HI.vaul.SPC.2$precip/HI.vaul.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2$HI ~ HI.vaul.SPC.2$precip + HI.vaul.SPC.2$Intensity) # model one with total precip and intensity
HI.vaul.SPC.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.vaul.turb.2 <- left_join(HI.vaul.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.vaul.turb.2$TOTAL.TIME <- as.numeric(HI.vaul.turb.2$TOTAL.TIME)
HI.vaul.turb.2$Intensity <- HI.vaul.turb.2$precip/HI.vaul.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
vaul.lm.turb.2 <- lm(HI.vaul.turb.2$HI ~ HI.vaul.turb.2$precip + HI.vaul.turb.2$Intensity) # model one with total precip and intensity
HI.vaul.turb.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("VAUL turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
# STRT #
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/",
recursive=F,
pattern="STRT",
full.names=TRUE)
STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list,
read.csv,
check.names = FALSE,
stringsAsFactors=FALSE,
header=T, blank.lines.skip = TRUE, fill=TRUE))
View(STRT_storms)
STRT_storms$storm.num = c(rep("storm10", 246),
rep("storm1a", 95),
rep("storm1b", 157),
rep("storm1c", 105),
rep("storm1d", 78),
rep("storm1e", 476),
rep("storm2", 166),
rep("storm3", 418),
rep("storm4a", 152),
rep("storm4b", 322),
rep("storm5", 250),
rep("storm6", 90),
rep("storm7a", 98),
rep("storm7b", 95),
rep("storm8", 178),
rep("storm9a", 294),
rep("storm9b", 134),
rep("storm9c", 482))
STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
STRT.2020.storms.1<- left_join(STRT_storms, STRT_RainGauge_2020, by = "DateTime")
names(STRT.2020.storms.1)[names(STRT.2020.storms.1) == ''] <- 'x'
STRT.2020.per.storm.1 <- STRT.2020.storms.1 %>% group_by(storm.num) %>%
summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)
HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "turb")
HI.strt.no3 <- left_join(HI.mean.precip.strt.NO3, STRT.2020.per.storm.1, by = "storm.num")
strt.lm.no3 <- lm(HI.strt.no3$HI ~ HI.strt.no3$precip) # model one with just total precip
strt.formula <- y ~ x
HI.strt.no3 %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.fDOM <- left_join(HI.mean.precip.strt.fDOM, STRT.2020.per.storm.1, by = "storm.num")
strt.lm.fDOM <- lm(HI.strt.fDOM$HI ~ HI.strt.fDOM$precip) # model one with just total precip
HI.strt.fDOM %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.SPC <- left_join(HI.mean.precip.strt.SPC, STRT.2020.per.storm.1, by = "storm.num")
HI.strt.SPC <- left_join(HI.mean.precip.strt.SPC, STRT.2020.per.storm.1, by = "storm.num")
strt.lm.SPC <- lm(HI.strt.SPC$HI ~ HI.strt.SPC$precip) # model one with just total precip
HI.strt.SPC %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
HI.strt.turb <- left_join(HI.mean.precip.strt.turb, STRT.2020.per.storm.1, by = "storm.num")
strt.lm.turb <- lm(HI.strt.turb$HI ~ HI.strt.turb$precip) # model one with just total precip
HI.strt.turb %>%
ggplot(aes(x=precip,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Precip") +
ylab("HI-Solute Storage") # plot model
sum.time <- STRT.2020.storms.1 %>%
mutate(grp=data.table::rleid(storm.num))%>%
group_by(grp) %>%
summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
min(DateTime),units="hour"))%>%
group_by(storm.num) %>%
summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column
HI.strt.no3.2 <- left_join(HI.strt.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.no3.2$TOTAL.TIME <- as.numeric(HI.strt.no3.2$TOTAL.TIME)
HI.strt.no3.2$Intensity <- HI.strt.no3.2$precip/HI.strt.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.no3.2 <- lm(HI.strt.no3.2$HI ~ HI.strt.no3.2$precip + HI.strt.no3.2$Intensity) # model one with total precip and intensity
HI.strt.no3.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT NO3") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.fDOM.2 <- left_join(HI.strt.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.fDOM.2$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2$TOTAL.TIME)
HI.strt.fDOM.2$Intensity <- HI.strt.fDOM.2$precip/HI.strt.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2$HI ~ HI.strt.fDOM.2$precip + HI.strt.fDOM.2$Intensity) # model one with total precip and intensity
HI.strt.fDOM.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT fDOM") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.SPC.2 <- left_join(HI.strt.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.SPC.2$TOTAL.TIME <- as.numeric(HI.strt.SPC.2$TOTAL.TIME)
HI.strt.SPC.2$Intensity <- HI.strt.SPC.2$precip/HI.strt.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.SPC.2 <- lm(HI.strt.SPC.2$HI ~ HI.strt.SPC.2$precip + HI.strt.SPC.2$Intensity) # model one with total precip and intensity
HI.strt.SPC.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT SPC") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
HI.strt.turb.2 <- left_join(HI.strt.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm
HI.strt.turb.2$TOTAL.TIME <- as.numeric(HI.strt.turb.2$TOTAL.TIME)
HI.strt.turb.2$Intensity <- HI.strt.turb.2$precip/HI.strt.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr
strt.lm.turb.2 <- lm(HI.strt.turb.2$HI ~ HI.strt.turb.2$precip + HI.strt.turb.2$Intensity) # model one with total precip and intensity
HI.strt.turb.2 %>%
ggplot(aes(x=Intensity,
y=HI)) +
geom_point() +
geom_smooth(method = "lm") +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
ggtitle("STRT turb") +
xlab("Intensity (mm/hr)") +
ylab("HI-Solute Storage") +
theme_classic() # plot model
