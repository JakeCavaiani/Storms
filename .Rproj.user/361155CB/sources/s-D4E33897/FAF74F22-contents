### Correction factors for YSI fDOM sensors ###
## Temperature
## Turbidity
## CDOM

## Input data: Sensor output from in-lab tests
## Output: 
  # Sensor data from lab tests
  # Regression output containing sensor specific correction factors

library(tidyverse)
library(here)
library(googledrive)
library(readxl)
library(ggpmisc)
library(broom)

### Data ###
# Read in data from each test
# Data on google drive
# fDOM vs. T
# fDOM vs. color + spec readings of abs254nm
# fDOM vs. turbidity

####################################################################################
### Attenuation of fDOM due to CDOM ###
####################################################################################

#Method from Downing et al. 2012 L+O: Methods

## Data
# EXO files
dir.create(here("EXO raw data", "fDOM_color"))
dir.create(here("plots"))

fDOM_cdom_url <- "https://docs.google.com/spreadsheets/d/10A2wvuzdyKoWGE3goo5sWmjllPS6sjAw/edit#gid=1254213175"
fDOM_color <- drive_get(as_id(fDOM_cdom_url))

fDOM_cdom_url.2021 <- "https://docs.google.com/spreadsheets/d/1mPY-4b2kzuQVEEAJLBQCpJ60muZ6p_wKnSuiykYcUdE/edit#gid=630198217"
fDOM_color.2021 <- drive_get(as_id(fDOM_cdom_url.2021))

setwd(here("EXO raw data", "fDOM_color"))
drive_download(fDOM_color)

drive_download(fDOM_color.2021)

fDOM_cdom <- read_excel("CDOM-FDOM (1).xlsx", sheet = "Sheet5")
fDOM_cdom.2021 <- read_excel("cDOM_ABS_Corrections.xlsx", sheet = "Sheet1")

# Rename % Vault & abs columns
names(fDOM_cdom)[names(fDOM_cdom) == '%VAUL'] <- 'pct_Vault'
names(fDOM_cdom)[names(fDOM_cdom) == 'ABS(254)'] <- 'abs254'

names(fDOM_cdom.2021)[names(fDOM_cdom.2021) == '%VAUL'] <- 'pct_Vault'
names(fDOM_cdom.2021)[names(fDOM_cdom.2021) == 'ABS(254)'] <- 'abs254'

# Remove first row containing fDOM QSU labels
fDOM_cdom <- fDOM_cdom[-c(1),]
fDOM_cdom.2021 <- fDOM_cdom.2021[-c(1),]

# fDOM_QSU to numeric
fDOM_cdom <- fDOM_cdom %>% mutate(across("19B103712":"19B103711", as.numeric))
fDOM_cdom.2021 <- fDOM_cdom.2021 %>% mutate(across("18H111974":"19B103711", as.numeric))

write.csv(fDOM_cdom, "fDOM_cdom_labtest.csv", row.names = FALSE)
write.csv(fDOM_cdom.2021, "fDOM_cdom_labtest.2021.csv", row.names = FALSE)

# spec-measured abs @ 254 nm
absurl <- "https://docs.google.com/spreadsheets/d/1_WVI-yC7zQZTrk3wfDJbZivp5o5sKrbU/edit#gid=844583110"
abs <- drive_get(as_id(absurl))

absurl.2021 <- "https://docs.google.com/spreadsheets/d/1tIVMQMovJgt93GRRXfP_Nn51GTopunGjaOBCsqZwHrY/edit#gid=0"
abs.2021 <- drive_get(as_id(absurl.2021))

setwd(here("EXO raw data", "fDOM_color"))
drive_download(abs)
drive_download(abs.2021)

abs254 <- read_excel("210122-FDOMabs.xlsx")
abs254 <- abs254[,2:3]
names(abs254) <- c("pct_Vault", "abs254")

abs254.2021 <- read_excel("211110_FDOMabs.xlsx")
abs254.2021 <- abs254.2021[,2:3]
names(abs254.2021) <- c("pct_Vault", "abs254")

abs254.mn <- abs254 %>% group_by(pct_Vault) %>%
                        summarize(abs254_lab = mean(abs254)) %>%
                        mutate(pct_Vault = pct_Vault*100)

abs254.mn.2021 <- abs254.2021 %>% group_by(pct_Vault) %>%
  summarize(abs254_lab = mean(abs254)) %>%
  mutate(pct_Vault = pct_Vault*100)


write.csv(abs254.2021, "Vault_dilutions_abs254.2021_spec.csv", row.names = FALSE)

## Plot abs-254 vs fDOM to determine linear range
fDOM_abs.pl <- fDOM_cdom %>% pivot_longer(cols = "19B103712":"19B103711", values_to = "fDOM_QSU", names_to = "EXOserial") %>% ggplot(aes(x = abs254, y = fDOM_QSU)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, level = 0.95) +
  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               label.x.npc = "right", label.y.npc = 0.15,
               formula = y ~ x, parse = TRUE, size = 5) +
  facet_wrap(~EXOserial)

fDOM_abs.pl.2021 <- fDOM_cdom.2021 %>% pivot_longer(cols = "18H111974":"19B103711", values_to = "fDOM_QSU", names_to = "EXOserial") %>% ggplot(aes(x = abs254, y = fDOM_QSU)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, level = 0.95) +
  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               label.x.npc = "right", label.y.npc = 0.15,
               formula = y ~ x, parse = TRUE, size = 5) +
  facet_wrap(~EXOserial)

fDOM_cdom.2021 %>% ggplot(aes(x = `ABS(254)_2`, y = fDOM_cdom.2021$`19B103712`)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, level = 0.95) +
  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               label.x.npc = "right", label.y.npc = 0.15,
               formula = y ~ x, parse = TRUE, size = 5) +
  ggtitle("19B103712")
  
  
# Linear through 0.6 AU = abs of Vault baseflow 
ggsave(file = "fDOM_abs254.pdf", path = here("plots"))
ggsave(file = "fDOM_abs254.2021.pdf", path = here("plots"))
ggsave(file = "fDOM_abs254.19B103712.2021.pdf", path = here("plots"))

## Regression coefficients of abs254 vs. fDOM over linear range for each sensor

####################################################################################
### Temperature correction factor ###
####################################################################################

## Data
# EXO files
dir.create(here("EXO raw data", "fDOM_T"))

# files list
files <- list.files(path = here("EXO raw data", "fDOM_T"), recursive=F, pattern=".csv", full.names=TRUE)

# Read in as separate data frames
fDOM_T.list <- lapply(files, read.csv, stringsAsFactors=FALSE, skip = 9, header=FALSE)

names(fDOM_T.list) <- gsub(".csv","", 
                           list.files(path = here("EXO raw data", "fDOM_T"), pattern = ".csv", full.names = FALSE), fixed = TRUE)
           
list2env(fDOM_T.list, .GlobalEnv)

# 15C101028
names(fDOM_T_15C101028) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_15C101028$Serial <- rep("15C101028")

# 19B102604
names(fDOM_T_19B102604) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_19B102604$Serial <- rep("19B102604")

# 19B103712
names(fDOM_T_19B103712) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_19B103712$Serial <- rep("19B103712")

# Separate 15C101028 & 16F104618
names(fDOM_T_15C101028_16F104618) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU_1", "fDOM_QSU_2", "fDOM_RFU_1", "fDOM_RFU_2", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")

fDOM_T_15C101028_210 <- fDOM_T_15C101028_16F104618 %>% select(-c("fDOM_QSU_2", "fDOM_RFU_2"))
fDOM_T_15C101028_210$Serial <- rep("15C101028_210")
names(fDOM_T_15C101028_210)[names(fDOM_T_15C101028_210) == 'fDOM_QSU_1'] <- 'fDOM_QSU'
names(fDOM_T_15C101028_210)[names(fDOM_T_15C101028_210) == 'fDOM_RFU_1'] <- 'fDOM_RFU'

fDOM_T_16F104618 <- fDOM_T_15C101028_16F104618 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1"))
fDOM_T_16F104618$Serial <- rep("16F104618")
names(fDOM_T_16F104618)[names(fDOM_T_16F104618) == 'fDOM_QSU_2'] <- 'fDOM_QSU'
names(fDOM_T_16F104618)[names(fDOM_T_16F104618) == 'fDOM_RFU_2'] <- 'fDOM_RFU'

# Separate 19B102604, 19B103711, & 19B103712
names(fDOM_T_19B102604_19B103711_19B103712) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_3", "fDOM_RFU_1", "fDOM_RFU_2", "fDOM_RFU_3", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")

fDOM_T_19B102604_210 <- fDOM_T_19B102604_19B103711_19B103712 %>% select(-c("fDOM_QSU_2", "fDOM_RFU_2", "fDOM_QSU_3", "fDOM_RFU_3"))
fDOM_T_19B102604_210$Serial <- rep("19B102604_210")
names(fDOM_T_19B102604_210)[names(fDOM_T_19B102604_210) == 'fDOM_QSU_1'] <- 'fDOM_QSU'
names(fDOM_T_19B102604_210)[names(fDOM_T_19B102604_210) == 'fDOM_RFU_1'] <- 'fDOM_RFU'

fDOM_T_19B103711 <- fDOM_T_19B102604_19B103711_19B103712 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_3", "fDOM_RFU_3"))
fDOM_T_19B103711$Serial <- rep("19B103711")
names(fDOM_T_19B103711)[names(fDOM_T_19B103711) == 'fDOM_QSU_2'] <- 'fDOM_QSU'
names(fDOM_T_19B103711)[names(fDOM_T_19B103711) == 'fDOM_RFU_2'] <- 'fDOM_RFU'

fDOM_T_19B103712 <- fDOM_T_19B102604_19B103711_19B103712 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_2", "fDOM_RFU_2"))
fDOM_T_19B103712$Serial <- rep("19B103712")
names(fDOM_T_19B103712)[names(fDOM_T_19B103712) == 'fDOM_QSU_3'] <- 'fDOM_QSU'
names(fDOM_T_19B103712)[names(fDOM_T_19B103712) == 'fDOM_RFU_3'] <- 'fDOM_RFU'

# Separate 15C101028, 16F104618, 19B102604, 19B103711, & 19B103712
names(fDOM_T_041719) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_3", "fDOM_QSU_4", "fDOM_QSU_5", "fDOM_RFU_1", "fDOM_RFU_2", "fDOM_RFU_3", "fDOM_RFU_4", "fDOM_RFU_5", "nLF_cond", "Sal", "spcond", "TDS", "wiper", "Temp_C", "BatteryV", "CablePwr")

fDOM_T_15C101028_417 <- fDOM_T_041719 %>% select(-c("fDOM_QSU_2", "fDOM_RFU_2", "fDOM_QSU_3", "fDOM_RFU_3", "fDOM_QSU_4", "fDOM_RFU_4", "fDOM_QSU_5", "fDOM_RFU_5", "wiper"))
fDOM_T_15C101028_417$Serial <- rep("15C101028_417")
names(fDOM_T_15C101028_417)[names(fDOM_T_15C101028_417) == 'fDOM_QSU_1'] <- 'fDOM_QSU'
names(fDOM_T_15C101028_417)[names(fDOM_T_15C101028_417) == 'fDOM_RFU_1'] <- 'fDOM_RFU'

fDOM_T_16F104618_417 <- fDOM_T_041719 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_3", "fDOM_RFU_3", "fDOM_QSU_4", "fDOM_RFU_4", "fDOM_QSU_5", "fDOM_RFU_5", "wiper"))
fDOM_T_16F104618_417$Serial <- rep("16F104618_417")
names(fDOM_T_16F104618_417)[names(fDOM_T_16F104618_417) == 'fDOM_QSU_2'] <- 'fDOM_QSU'
names(fDOM_T_16F104618_417)[names(fDOM_T_16F104618_417) == 'fDOM_RFU_2'] <- 'fDOM_RFU'

fDOM_T_19B102604_417 <- fDOM_T_041719 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_2", "fDOM_RFU_2", "fDOM_QSU_4", "fDOM_RFU_4", "fDOM_QSU_5", "fDOM_RFU_5", "wiper"))
fDOM_T_19B102604_417$Serial <- rep("19B102604_417")
names(fDOM_T_19B102604_417)[names(fDOM_T_19B102604_417) == 'fDOM_QSU_3'] <- 'fDOM_QSU'
names(fDOM_T_19B102604_417)[names(fDOM_T_19B102604_417) == 'fDOM_RFU_3'] <- 'fDOM_RFU'

fDOM_T_19B103711_417 <- fDOM_T_041719 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_2", "fDOM_RFU_2", "fDOM_QSU_3", "fDOM_RFU_3", "fDOM_QSU_5", "fDOM_RFU_5", "wiper"))
fDOM_T_19B103711_417$Serial <- rep("19B103711_417")
names(fDOM_T_19B103711_417)[names(fDOM_T_19B103711_417) == 'fDOM_QSU_4'] <- 'fDOM_QSU'
names(fDOM_T_19B103711_417)[names(fDOM_T_19B103711_417) == 'fDOM_RFU_4'] <- 'fDOM_RFU'

fDOM_T_19B103712_417 <- fDOM_T_041719 %>% select(-c("fDOM_QSU_1", "fDOM_RFU_1", "fDOM_QSU_2", "fDOM_RFU_2", "fDOM_QSU_3", "fDOM_RFU_3", "fDOM_QSU_4", "fDOM_RFU_4", "wiper"))
fDOM_T_19B103712_417$Serial <- rep("19B103712_417")
names(fDOM_T_19B103712_417)[names(fDOM_T_19B103712_417) == 'fDOM_QSU_5'] <- 'fDOM_QSU'
names(fDOM_T_19B103712_417)[names(fDOM_T_19B103712_417) == 'fDOM_RFU_5'] <- 'fDOM_RFU'

# Separate 15C101028, 16F104618, 19B102604, 19B103711, & 19B103712 4/28
names(fDOM_T_190428_fDOM) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_3", "fDOM_QSU_4", "fDOM_QSU_5", "nLF_cond", "Sal", "spcond", "TDS", "wiper", "Temp_C", "BatteryV", "CablePwr")

fDOM_T_15C101028_428 <- fDOM_T_190428_fDOM %>% select(-c("fDOM_QSU_2", "fDOM_QSU_3", "fDOM_QSU_4", "fDOM_QSU_5", "wiper"))
fDOM_T_15C101028_428$Serial <- rep("15C101028_428")
names(fDOM_T_15C101028_428)[names(fDOM_T_15C101028_428) == 'fDOM_QSU_1'] <- 'fDOM_QSU'

fDOM_T_16F104618_428 <- fDOM_T_190428_fDOM %>% select(-c("fDOM_QSU_1", "fDOM_QSU_3", "fDOM_QSU_4", "fDOM_QSU_5", "wiper"))
fDOM_T_16F104618_428$Serial <- rep("16F104618_428")
names(fDOM_T_16F104618_428)[names(fDOM_T_16F104618_428) == 'fDOM_QSU_2'] <- 'fDOM_QSU'

fDOM_T_19B102604_428 <- fDOM_T_190428_fDOM %>% select(-c("fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_4", "fDOM_QSU_5", "wiper"))
fDOM_T_19B102604_428$Serial <- rep("19B102604_428")
names(fDOM_T_19B102604_428)[names(fDOM_T_19B102604_428) == 'fDOM_QSU_3'] <- 'fDOM_QSU'

fDOM_T_19B103711_428 <- fDOM_T_190428_fDOM %>% select(-c("fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_3", "fDOM_QSU_5", "wiper"))
fDOM_T_19B103711_428$Serial <- rep("19B103711_428")
names(fDOM_T_19B103711_428)[names(fDOM_T_19B103711_428) == 'fDOM_QSU_4'] <- 'fDOM_QSU'

fDOM_T_19B103712_428 <- fDOM_T_190428_fDOM %>% select(-c("fDOM_QSU_1", "fDOM_QSU_2", "fDOM_QSU_3", "fDOM_QSU_4", "wiper"))
fDOM_T_19B103712_428$Serial <- rep("19B103712_428")
names(fDOM_T_19B103712_428)[names(fDOM_T_19B103712_428) == 'fDOM_QSU_5'] <- 'fDOM_QSU'

# Excel files
fDOM_T_15C101028_215 <- read_excel(here("EXO raw data", "fDOM_T", "fDOM_T_210215.xlsx"), skip = 9, sheet = 1, col_names = FALSE)
names(fDOM_T_15C101028_215) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_15C101028_215$Serial <- rep("15C101028_215")
fDOM_T_15C101028_215$Date <- as.character(fDOM_T_15C101028_215$Date)
fDOM_T_15C101028_215$Time <- as.character(fDOM_T_15C101028_215$Time)

fDOM_T_16F104618_215 <- read_excel(here("EXO raw data", "fDOM_T", "fDOM_T_210215.xlsx"), skip = 9, sheet = 2, col_names = FALSE)
names(fDOM_T_16F104618_215) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_16F104618_215$Serial <- rep("16F104618_215")
fDOM_T_16F104618_215$Date <- as.character(fDOM_T_16F104618_215$Date)
fDOM_T_16F104618_215$Time <- as.character(fDOM_T_16F104618_215$Time)

fDOM_T_19B103712_216 <- read_excel(here("EXO raw data", "fDOM_T", "fDOM_T_210216.xlsx"), skip = 9, sheet = 1, col_names = FALSE)
names(fDOM_T_19B103712_216) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_19B103712_216$Serial <- rep("19B103712_216")
fDOM_T_19B103712_216$Date <- as.character(fDOM_T_19B103712_216$Date)
fDOM_T_19B103712_216$Time <- as.character(fDOM_T_19B103712_216$Time)

fDOM_T_19B102604_216 <- read_excel(here("EXO raw data", "fDOM_T", "fDOM_T_210216.xlsx"), skip = 9, sheet = 2, col_names = FALSE)
names(fDOM_T_19B102604_216) <- c("Date", "Time", "time_frac", "Site", "Cond", "fDOM_QSU", "fDOM_RFU", "nLF_cond", "Sal", "spcond", "TDS", "Temp_C", "BatteryV", "CablePwr")
fDOM_T_19B102604_216$Serial <- rep("19B102604_216")
fDOM_T_19B102604_216$Date <- as.character(fDOM_T_19B102604_216$Date)
fDOM_T_19B102604_216$Time <- as.character(fDOM_T_19B102604_216$Time)

## Merge all instrument files
# csv
fDOM_T_csv <- bind_rows(fDOM_T_15C101028, 
                        fDOM_T_15C101028_210, 
                        fDOM_T_16F104618, 
                        fDOM_T_19B102604, 
                        fDOM_T_19B102604_210, 
                        fDOM_T_19B103711, 
                        fDOM_T_19B103712, 
                        fDOM_T_15C101028_417, 
                        fDOM_T_16F104618_417, 
                        fDOM_T_19B102604_417, 
                        fDOM_T_19B103711_417, 
                        fDOM_T_19B103712_417, 
                        fDOM_T_15C101028_428, 
                        fDOM_T_16F104618_428, 
                        fDOM_T_19B102604_428, 
                        fDOM_T_19B103711_428, 
                        fDOM_T_19B103712_428
                        )

fDOM_T_csv <- fDOM_T_csv %>% mutate(DateTime = as.POSIXct(paste(Date, Time), format = "%m/%d/%Y %H:%M:%S", tz = "America/Anchorage"))


#xl
fDOM_T_xl <- bind_rows(fDOM_T_15C101028_215, fDOM_T_16F104618_215, fDOM_T_19B103712_216, fDOM_T_19B102604_216) 

fDOM_T_xl <- fDOM_T_xl %>% separate(Time, into = c("junk2", "Time"), sep = " ") %>%
                           select(-junk2) %>%
                           mutate(DateTime = as.POSIXct(paste(Date, Time), format = "%Y-%m-%d %H:%M:%S", tz = "America/Anchorage"))

fDOM_T <- bind_rows(fDOM_T_csv, fDOM_T_xl)

fDOM_T <- fDOM_T %>% group_by(Serial) %>%
                     filter(fDOM_QSU > 50) %>%
                     mutate(limb = ifelse(DateTime < DateTime[which.max(Temp_C)], "ascending", "descending"))

## Plots ##
fDOM_T.pl <- fDOM_T %>% ggplot(aes(x = Temp_C, y = fDOM_QSU, color = limb)) +
  geom_point() +
  facet_wrap(~Serial, scales = "free_y")

## Useable data:
  # 15C101028_417
  # 16F104618_417
  # 19B102604
  # 19B102604_417
  # 19B102604_428
  # 19B103711_417
  # 19B103712_417

fDOM_T_corr <- fDOM_T %>% filter(Serial %in% c("15C101028_417",
                                               "16F104618_417",
                                               "19B102604",
                                               "19B102604_417",
                                               "19B102604_428",
                                               "19B103711_417",
                                               "19B103712_417")) 

fDOM_T_corr.pl <- fDOM_T_corr %>% ggplot(aes(x = Temp_C, y = fDOM_QSU, color = limb)) +
  geom_point() +
  facet_wrap(~Serial, scales = "free_y")


fDOM_T_corr <- fDOM_T_corr %>% filter(Temp_C <= 30) %>%
                               filter(ifelse(Serial == "19B102604_428", fDOM_QSU < 150, TRUE)) %>%
                               filter(ifelse(Serial == "19B102604" & Temp_C < 2, fDOM_QSU > 282, TRUE)) 
                          
fDOM_T_corr.pl <- fDOM_T_corr %>% ggplot(aes(x = Temp_C, y = fDOM_QSU, color = limb)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, level = 0.95) +
  stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               label.x.npc = "left", label.y.npc = 0.15,
               formula = y ~ x, parse = TRUE, size = 4) +
  facet_wrap(~Serial, scales = "free_y")

ggsave(path = here("plots"), file = "fDOM_T.pdf", width = 10, height = 10, units = "in")

write.csv(fDOM_T_corr, here("lab_data","fDOM_T.csv"), row.names = FALSE)

### T correction factors ###
## Watras et al. 2011
## fDOM(t)=fDOM(m)/[1+rho(T(m)-T(t))]
## T(t)=reference T. fDOM sensors were calibrated to quinine sulfate at lab temperature (23 C).

Tref <- 23

fDOM_T_rho <- fDOM_T_corr %>% mutate(Tdiff = Temp_C - Tref) %>%
                              group_by(Serial) %>%
                              nest() %>%
                              mutate(lm_mod = map(data, function(d) lm(fDOM_QSU ~ Tdiff, data = d))) %>%
                              mutate(mod_tidy = map(lm_mod, broom::tidy, quick = T)) %>%
                              unnest(mod_tidy) %>%
                              select(c(Serial, term, estimate)) %>%
                              mutate(regr = ifelse(term == "Tdiff", "slope", "intercept")) %>%
                              select(-term) %>%
                              pivot_wider(names_from = regr, values_from = estimate) %>%
                              mutate(rho = slope/intercept)

dir.create("correction_factors")
write.csv(fDOM_T_rho, here("correction_factors", "fDOM_T_rho.csv"), row.names = FALSE)

####################################################################################
### Turbidity correction factor ###
####################################################################################

## Data ##
turb_list <- list.files(path = here("EXO raw data", "fDOM_turb"), 
                            recursive=F, 
                            pattern=".csv", 
                            full.names=TRUE)

fDOM_turb.dat <- do.call(rbind, lapply(turb_list, function(x) 
  transform(read.csv(x, skip = 9, header = FALSE), File = basename(x))))

names(fDOM_turb.dat) <- c("Date", 
                          "Time", 
                          "time_frac", 
                          "Site", 
                          "15C101028", 
                          "16F104618", 
                          "19B102604", 
                          "19B103711", 
                          "19B103712", 
                          "RFU1", 
                          "RFU2", 
                          "RFU3", 
                          "RFU4", 
                          "RFU5", 
                          "Turb_FNU", 
                          "TSS", 
                          "batteryV", 
                          "CablePwr", 
                          "File") 

fDOM_turb.dat <- fDOM_turb.dat %>% separate(File, c("rundate", "const", "FDOM", "sed_site", "filtered"), sep = "_") %>%
                                  separate(filtered, c("filtered", "junk2")) %>%
                                  select(-c("const", "FDOM", "junk2")) %>%
                                  mutate(filtered = ifelse(filtered == 2, 1, filtered))

fDOM_turb.dat <- fDOM_turb.dat %>% pivot_longer("15C101028":"19B103712", names_to = "Serial", values_to = "fDOM_QSU")

write.csv(fDOM_turb.dat, here("lab_data", "fDOM_turb.csv"), row.names = FALSE)

## Downing et al. 2012
## rp = fDOMraw/fDOMfiltered
## correction: fDOM/slope[rp vs. turb]*turb

# 1 turbidity sensor, multiple fDOM sensors
turb0 <- fDOM_turb.dat %>% filter(filtered == 0) %>%
                           group_by(Serial, sed_site) %>%
                           summarize(across(c(fDOM_QSU, Turb_FNU), list("0" = mean)))
                          
fDOM_turb_cal <- fDOM_turb.dat %>% filter(filtered == 1) %>%
                              left_join(., turb0, by = c("Serial", "sed_site"))
  
ggsave(path = here("plots"), file = "fDOM_turb_raw.pdf", width = 10, height = 10, units = "in")                            
write.csv(fDOM_turb_cal, here("lab_data", "fDOM_turb_cal.csv"), row.names = FALSE)

# Plots
fDOM_turb.pl <- fDOM_turb_cal %>% ggplot(aes(x = Turb_FNU, y = fDOM_QSU, color = Serial)) +
  geom_point() +
  geom_point(aes(x = Turb_FNU_0, y = fDOM_QSU_0), shape = "square", size = 3) +
  facet_wrap(~sed_site)

# Data clean-up
fDOM_turb_cal$fDOM_QSU_ot <- fDOM_turb_cal$fDOM_QSU
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU < 500 & fDOM_turb_cal$fDOM_QSU <50] <- NA
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU < 500 & fDOM_turb_cal$fDOM_QSU <50] <- NA
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU > 750 & fDOM_turb_cal$fDOM_QSU > 75 & fDOM_turb_cal$sed_site != "MOOS"] <- NA
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU < 750 & fDOM_turb_cal$fDOM_QSU < 50 & fDOM_turb_cal$sed_site == "MOOS"] <- NA
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU < 500 & fDOM_turb_cal$fDOM_QSU < 75 & fDOM_turb_cal$sed_site == "MOOS"] <- NA
fDOM_turb_cal$fDOM_QSU_ot[fDOM_turb_cal$Turb_FNU < 250 & fDOM_turb_cal$fDOM_QSU < 120 & fDOM_turb_cal$sed_site == "MOOS"] <- NA

fDOM_turb.pl <- fDOM_turb_cal %>% ggplot(aes(x = Turb_FNU, y = fDOM_QSU_ot, color = Serial)) +
  geom_point() +
  geom_point(aes(x = Turb_FNU_0, y = fDOM_QSU_0), shape = "square", size = 3) +
  facet_wrap(~sed_site)

## Downing et al. 2012
## rp = fDOMraw/fDOMfiltered
## correction: fDOM/slope[rp vs. turb]*turb

# Calculate rp
fDOM_turb_cal <- fDOM_turb_cal %>% mutate(rp_fDOM_turb = fDOM_QSU_ot/fDOM_QSU_0)

fDOM_rp.pl <- fDOM_turb_cal %>% ggplot(aes(x = Turb_FNU, y = rp_fDOM_turb, color = Serial)) +
  geom_point() +
  facet_wrap(~sed_site)

fDOM_rp_log.pl <- fDOM_turb_cal %>% ggplot(aes(x = Turb_FNU, y = log(rp_fDOM_turb), color = Serial)) +
  geom_point() +
  facet_wrap(~sed_site)

fDOM_turb_rp <- fDOM_turb_cal %>% 
                    group_by(sed_site, Serial) %>%
                    nest() %>%
                    mutate(lm_mod = map(data, function(d) lm(log(rp_fDOM_turb) ~ Turb_FNU, data = d))) %>%
                    mutate(mod_tidy = map(lm_mod, broom::tidy, quick = T)) %>%
                    unnest(mod_tidy) %>%
                    select(c(sed_site, Serial, term, estimate)) %>%
                    mutate(regr = ifelse(term == "Turb_FNU", "slope", "intercept")) %>%
                    select(-term) %>%
                    pivot_wider(names_from = regr, values_from = estimate)

# Need to exp when applying result of fDOM_turb regression to correct: fDOMcorr = fDOM/exp(turb_FNU*slope + intercept)
write.csv(fDOM_turb_rp, here("correction_factors", "fDOM_turb_rp.csv"), row.names = FALSE)
  
                   

