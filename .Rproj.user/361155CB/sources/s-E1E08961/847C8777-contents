### The purpose of this script is to regress mean HI at each site per year against burn extent (percentage burned)
  # and against permafrost extent (% coverage OR soil temperature profile)
# Input: HI.dat 
# Step 1) import HI.dat file which is HI for individual storms in 2018-2021 across DoD sites
# Step 2) Calculate mean HI at each site for each year
# Step 3) run a linear model of mean HI against burn extent 
# Step 4) run a linear model of mean HI against permafrost extent
# Output: linear model plot 

# % of most recent burn # 
# Poker Creek 33%
# Vault Creek: NA
# French Creek: 7.3% 
# Moose Creek: 65.7%
# Stuart Creek: 67.4%

library(here)
library(tidyverse)
library(boot)
library(broom)
library(purrr)
library(viridis)
library(readr)
library(tidyverse)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(readr)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)

# Import data #
HI.dat <- read.csv("~/Documents/Storms/Output_from_analysis/HI.dat.csv")


HI.mean<- HI.dat %>% group_by(site.ID, response, year) %>%  
  summarise_at(vars(HI), list(HI = mean)) # take mean by site response and year 

# merged # 
# By site and response
FRCH.fDOM <- subset(HI.mean, site.ID == "FRCH" & response == "fDOM")
POKE.fDOM <- subset(HI.mean, site.ID == "POKE" & response == "fDOM")
MOOS.fDOM <- subset(HI.mean, site.ID == "MOOS" & response == "fDOM")
STRT.fDOM <- subset(HI.mean, site.ID == "STRT" & response == "fDOM")
VAUL.fDOM <- subset(HI.mean, site.ID == "VAUL" & response == "fDOM")

FRCH.NO3 <- subset(HI.mean, site.ID == "FRCH" & response == "NO3")
POKE.NO3 <- subset(HI.mean, site.ID == "POKE" & response == "NO3")
MOOS.NO3 <- subset(HI.mean, site.ID == "MOOS" & response == "NO3")
STRT.NO3 <- subset(HI.mean, site.ID == "STRT" & response == "NO3")
VAUL.NO3 <- subset(HI.mean, site.ID == "VAUL" & response == "NO3")

FRCH.fDOM$fire <- "0.073"
FRCH.fDOM$fire<- as.numeric(FRCH.fDOM$fire)

POKE.fDOM$fire <- "0.33"
POKE.fDOM$fire<- as.numeric(POKE.fDOM$fire)

MOOS.fDOM$fire <- "0.657"
MOOS.fDOM$fire<- as.numeric(MOOS.fDOM$fire)

STRT.fDOM$fire <- "0.674"
STRT.fDOM$fire<- as.numeric(STRT.fDOM$fire)

VAUL.fDOM$fire <- "0"
VAUL.fDOM$fire<- as.numeric(VAUL.fDOM$fire)

FRCH.NO3$fire <- "0.073"
FRCH.NO3$fire<- as.numeric(FRCH.NO3$fire)

POKE.NO3$fire <- "0.33"
POKE.NO3$fire<- as.numeric(POKE.NO3$fire)

MOOS.NO3$fire <- "0.657"
MOOS.NO3$fire<- as.numeric(MOOS.NO3$fire)

STRT.NO3$fire <- "0.674"
STRT.NO3$fire<- as.numeric(STRT.NO3$fire)

VAUL.NO3$fire <- "0"
VAUL.NO3$fire<- as.numeric(VAUL.NO3$fire)

fdom.hi <- rbind(FRCH.fDOM, POKE.fDOM, MOOS.fDOM, STRT.fDOM, VAUL.fDOM)
no3.hi <- rbind(FRCH.NO3, POKE.NO3, MOOS.NO3, STRT.NO3, VAUL.NO3)
fdom.hi$year <- as.character(fdom.hi$year)

no3.hi$year <- as.character(no3.hi$year)


fdom.lm <- lm(fdom.hi$HI ~ fdom.hi$fire)
no3.lm <- lm(no3.hi$HI ~ no3.hi$fire)

fdom.hi %>%
  ggplot(aes(x=fire, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("DOC") +
  xlab("Catchment burned (%)") +
  ylab("HI-Solute Storage")

no3.hi %>%
  ggplot(aes(x=fire, 
             y=HI, 
             color=year))+
  geom_point() +
  geom_smooth(method = "lm") + 
  ylim(-1,1) + 
  ggtitle("NO3") +
  xlab("Catchment burned (%)") +
  ylab("HI-Solute Storage")


### H 1.1: HI against precip ###
######################################## 2018 #####################################################################
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/All_final/", 
                              recursive=F, 
                              pattern="FRCH", 
                              full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                  read.csv, 
                                  check.names = FALSE,
                                  stringsAsFactors=FALSE, 
                                  header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 142),
                        rep("storm10a", 145),
                        rep("storm10b", 558),
                        rep("storm11a", 91),
                        rep("storm11b", 264),
                        rep("storm2a", 230),
                        rep("storm2b", 190),
                        rep("storm3", 234),
                        rep("storm4a", 72),
                        rep("storm4b", 383),
                        rep("storm5", 331),
                        rep("storm6", 303),
                        rep("storm7", 133),
                        rep("storm8a", 79),
                        rep("storm8b", 95),
                        rep("storm9", 116))

POKE_RainGauge_2018 <- read_csv("~/Documents/DoD_2018/RainGauge/POKE.RainGauge.2018.csv")
POKE_RainGauge_2018$DateTime <- as.POSIXct(POKE_RainGauge_2018$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2018.storms.1<- left_join(FRCH_storms, POKE_RainGauge_2018, by = "DateTime")

names(FRCH.2018.storms.1)[names(FRCH.2018.storms.1) == ''] <- 'x'


FRCH.2018.per.storm.1 <- FRCH.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip <- HI.dat %>% group_by(site.ID, year, storm.num) %>%  
  summarise_at(vars(HI), list(HI = mean)) # take mean by site response and year 


HI.mean.precip.frch <- subset(HI.mean.precip, year == "2018" & site.ID == "FRCH")


HI.mean.precip.frch.2 <- cbind(HI.mean.precip.frch, FRCH.2018.per.storm.1)

precip.lm.1 <- lm(HI.mean.precip.frch.2$HI ~ HI.mean.precip.frch.2$precip) # model one with just total precip

frch.formula <- y ~ x

HI.mean.precip.frch.2 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  ggtitle("FRCH") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

sum.time <- FRCH.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                             min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column

HI.mean.precip.frch.3 <- cbind(HI.mean.precip.frch.2, sum.time) # merging total time per storm event and the HI per storm 
HI.mean.precip.frch.3$TOTAL.TIME <- as.numeric(HI.mean.precip.frch.3$TOTAL.TIME)
HI.mean.precip.frch.3$Intensity <- HI.mean.precip.frch.3$precip/HI.mean.precip.frch.3$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

precip.lm.2 <- lm(HI.mean.precip.frch.3$HI ~ HI.mean.precip.frch.3$precip + HI.mean.precip.frch.3$Intensity) # model one with total precip and intensity 

HI.mean.precip.frch.3 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

FRCH.2018.storms.1$day <- julian(FRCH.2018.storms.1$DateTime, origin = as.POSIXct('2018-01-01', tz = 'America/Anchorage')) # making a fractional day column 
FRCH.2018.storms.1$day <- as.numeric(FRCH.2018.storms.1$day)

#time.since <- FRCH.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(day),
                                                         min(day),units="hour")) %>% 
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=(TOTAL.TIME)) # creating a total time column


#time.since <- FRCH.2018.storms.1 %>% 
  group_by(storm.num) %>% 
  summarize(TimeSince = difftime(max(day), min(day), units = "days"))

#setDT(FRCH.2018.storms.1)[, days_since_last_event := as.numeric(max(day-shift(day,type="lag"))), 
         # by = storm.num]




HI.mean.precip.response <- HI.dat %>% group_by(site.ID, year, storm.num, response) %>%  
  summarise_at(vars(HI), list(HI = mean)) # take mean by site response and year 


HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "FRCH" & response == "turb")


HI.mean.precip.frch.test <- left_join(HI.mean.precip.frch.fDOM, FRCH.2018.per.storm.1, by = "storm.num")

precip.lm.test <- lm(HI.mean.precip.frch.test$HI ~ HI.mean.precip.frch.test$precip) # model one with just total precip

frch.formula <- y ~ x

HI.mean.precip.frch.test %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


# NO3 # 
HI.mean.precip.frch.test.1 <- left_join(HI.mean.precip.frch.NO3, FRCH.2018.per.storm.1, by = "storm.num")

precip.lm.test.1 <- lm(HI.mean.precip.frch.test.1$HI ~ HI.mean.precip.frch.test.1$precip) # model one with just total precip

frch.formula <- y ~ x

HI.mean.precip.frch.test.1 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.mean.precip.frch.SPC <- left_join(HI.mean.precip.frch.SPC, FRCH.2018.per.storm.1, by = "storm.num")

precip.lm.test <- lm(HI.mean.precip.frch.SPC$HI ~ HI.mean.precip.frch.SPC$precip) # model one with just total precip

frch.formula <- y ~ x

HI.mean.precip.frch.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.mean.precip.frch.turb <- left_join(HI.mean.precip.frch.turb, FRCH.2018.per.storm.1, by = "storm.num")

precip.lm.test <- lm(HI.mean.precip.frch.turb$HI ~ HI.mean.precip.frch.turb$precip) # model one with just total precip

frch.formula <- y ~ x

HI.mean.precip.frch.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


HI.mean.precip.frch.test.2 <- left_join(HI.mean.precip.frch.test, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.mean.precip.frch.test.2$TOTAL.TIME <- as.numeric(HI.mean.precip.frch.test.2$TOTAL.TIME)
HI.mean.precip.frch.test.2$Intensity <- HI.mean.precip.frch.test.2$precip/HI.mean.precip.frch.test.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

precip.lm.test.2 <- lm(HI.mean.precip.frch.test.2$HI ~ HI.mean.precip.frch.test.2$precip + HI.mean.precip.frch.test.2$Intensity) # model one with total precip and intensity 

HI.mean.precip.frch.test.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.mean.precip.frch.test.3 <- left_join(HI.mean.precip.frch.test.1, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm of NO3
HI.mean.precip.frch.test.3$TOTAL.TIME <- as.numeric(HI.mean.precip.frch.test.3$TOTAL.TIME)
HI.mean.precip.frch.test.3$Intensity <- HI.mean.precip.frch.test.3$precip/HI.mean.precip.frch.test.3$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

precip.lm.test.3 <- lm(HI.mean.precip.frch.test.3$HI ~ HI.mean.precip.frch.test.3$precip + HI.mean.precip.frch.test.3$Intensity) # model one with total precip and intensity 

HI.mean.precip.frch.test.3 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2 <- left_join(HI.mean.precip.frch.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm of NO3
HI.frch.SPC.2 $TOTAL.TIME <- as.numeric(HI.frch.SPC.2$TOTAL.TIME)
HI.frch.SPC.2$Intensity <- HI.frch.SPC.2$precip/HI.frch.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

precip.lm.test.3 <- lm(HI.frch.SPC.2$HI ~ HI.frch.SPC.2$precip + HI.frch.SPC.2$Intensity) # model one with total precip and intensity 

HI.frch.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model

HI.frch.turb.2 <- left_join(HI.mean.precip.frch.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm of NO3
HI.frch.turb.2 $TOTAL.TIME <- as.numeric(HI.frch.turb.2$TOTAL.TIME)
HI.frch.turb.2$Intensity <- HI.frch.turb.2$precip/HI.frch.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

precip.lm.test.3 <- lm(HI.frch.turb.2$HI ~ HI.frch.turb.2$precip + HI.frch.turb.2$Intensity) # model one with total precip and intensity 

HI.frch.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model


# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2018/All_final/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 58),
                          rep("storm10", 432),
                          rep("storm11", 96),
                          rep("storm12", 324),
                          rep("storm2a", 70),
                          rep("storm2b", 166),
                          rep("storm2c", 192),
                          rep("storm3", 240),
                          rep("storm4", 244),
                          rep("storm5", 276),
                          rep("storm6", 332),
                          rep("storm7", 90),
                          rep("storm8", 176),
                          rep("storm9", 109))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2018.storms.1<- left_join(MOOS_storms, POKE_RainGauge_2018, by = "DateTime")

names(MOOS.2018.storms.1)[names(MOOS.2018.storms.1) == ''] <- 'x'

MOOS.2018.per.storm.1 <- MOOS.2018.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

MOOS.2018 <- read.csv("Q_Chem/MOOS/MOOS_chem_2018.csv")
MOOS.2018$DateTime <- as.POSIXct(MOOS.2018$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
MOOS.2018 <- left_join(MOOS.2018, POKE_RainGauge_2018, by = "DateTime")
MOOS.2018$week <- rollapplyr(MOOS.2018$inst_rainfall_mm, 336, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2018$month <- rollapplyr(MOOS.2018$inst_rainfall_mm, 1344, sum, na.rm = TRUE, fill = NA, partial = TRUE)
MOOS.2018$ThreeMonth <- rollapplyr(MOOS.2018$inst_rainfall_mm, 4032, sum, na.rm = TRUE, fill = NA, partial = TRUE)

MOOS.2018.1 <- left_join(MOOS.2018.storms.1, MOOS.2018, by = "DateTime") # week month and 3 month precip totals 

MOOS.2018.per.storm.2 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(week), list(precip.week = first), na.rm = TRUE) # grouping weekly precip leading up to storm event
MOOS.2018.per.storm.3 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(month), list(precip.month = first), na.rm = TRUE) # groouping monthly precip leading up to a storm 
MOOS.2018.per.storm.4 <- MOOS.2018.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(ThreeMonth), list(ThreeMonth = first), na.rm = TRUE) # grouping 3 month precip leading up to a storm 


HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2018" & site.ID == "MOOS" & response == "turb")

HI.moos.no3 <- left_join(HI.mean.precip.moos.NO3, MOOS.2018.per.storm.1, by = "storm.num")
HI.moos.no3 <- left_join(HI.moos.no3, MOOS.2018.per.storm.2, by = "storm.num")
HI.moos.no3 <- left_join(HI.moos.no3, MOOS.2018.per.storm.3, by = "storm.num")
HI.moos.no3 <- left_join(HI.moos.no3, MOOS.2018.per.storm.4, by = "storm.num")

HI.moos.no3$precip.week <- as.numeric(HI.moos.no3$precip.week)
HI.moos.no3$precip.month <- as.numeric(HI.moos.no3$precip.month)
HI.moos.no3$ThreeMonth <- as.numeric(HI.moos.no3$ThreeMonth)

moos.lm.no3 <- lm(HI.moos.no3$HI ~ HI.moos.no3$precip) # model one with just total precip
moos.lm.no3.1 <- lm(HI.moos.no3$HI ~ HI.moos.no3$precip.week) # model one with week before storm event
moos.lm.no3.2 <- lm(HI.moos.no3$HI ~ HI.moos.no3$precip.month) # model one with week before storm event
moos.lm.no3.3 <- lm(HI.moos.no3$HI ~ HI.moos.no3$ThreeMonth) # model one with week before storm event

moos.formula <- y ~ x

HI.moos.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.no3 %>%
  ggplot(aes(x=precip.week, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("one-week Precip") +
  ylab("HI-Solute Storage") # plot model

HI.moos.no3 %>%
  ggplot(aes(x=precip.month, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("month Precip") +
  ylab("HI-Solute Storage") # plot model

HI.moos.no3 %>%
  ggplot(aes(x=ThreeMonth, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("month Precip") +
  ylab("HI-Solute Storage") # plot model



HI.moos.fDOM <- left_join(HI.mean.precip.moos.fDOM, MOOS.2018.per.storm.1, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM$HI ~ HI.moos.fDOM$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC <- left_join(HI.mean.precip.moos.SPC, MOOS.2018.per.storm.1, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC$HI ~ HI.moos.SPC$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb <- left_join(HI.mean.precip.moos.turb, MOOS.2018.per.storm.1, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb$HI ~ HI.moos.turb$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model





sum.time <- MOOS.2018.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.moos.no3.2 <- left_join(HI.moos.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2$TOTAL.TIME <- as.numeric(HI.moos.no3.2$TOTAL.TIME)
HI.moos.no3.2$Intensity <- HI.moos.no3.2$precip/HI.moos.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2$HI ~ HI.moos.no3.2$precip + HI.moos.no3.2$Intensity) # model one with total precip and intensity 

HI.moos.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2 <- left_join(HI.moos.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2$TOTAL.TIME)
HI.moos.fDOM.2$Intensity <- HI.moos.fDOM.2$precip/HI.moos.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2$HI ~ HI.moos.fDOM.2$precip + HI.moos.fDOM.2$Intensity) # model one with total precip and intensity 

HI.moos.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2 <- left_join(HI.moos.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2$TOTAL.TIME <- as.numeric(HI.moos.SPC.2$TOTAL.TIME)
HI.moos.SPC.2$Intensity <- HI.moos.SPC.2$precip/HI.moos.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2$HI ~ HI.moos.SPC.2$precip + HI.moos.SPC.2$Intensity) # model one with total precip and intensity 

HI.moos.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2 <- left_join(HI.moos.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2$TOTAL.TIME <- as.numeric(HI.moos.turb.2$TOTAL.TIME)
HI.moos.turb.2$Intensity <- HI.moos.turb.2$precip/HI.moos.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2$HI ~ HI.moos.turb.2$precip + HI.moos.turb.2$Intensity) # model one with total precip and intensity 

HI.moos.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 


############################################# 2019 ################################################################
# import rain gauge data #
FRCH_RainGauge_2019 <- read.csv("~/Documents/DoD_2019/RainGauge/FRCH.RainGauge.2019.csv")
POKE_RainGauge_2019 <- read.csv("~/Documents/DoD_2019/RainGauge/POKE.RainGauge.2019.csv")
VAUL_RainGauge_2019 <- read.csv("~/Documents/DoD_2019/RainGauge/VAUL.RainGauge.2019.csv")

# convert to AK time 
FRCH_RainGauge_2019$DateTime <- as.POSIXct(FRCH_RainGauge_2019$Datetime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
POKE_RainGauge_2019$DateTime <- as.POSIXct(POKE_RainGauge_2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
VAUL_RainGauge_2019$DateTime <- as.POSIXct(VAUL_RainGauge_2019$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")

# round to nearest 15 min 
FRCH_RainGauge_2019$DateTime <- lubridate::floor_date(FRCH_RainGauge_2019$DateTime, "15 minutes")
POKE_RainGauge_2019$DateTime <- lubridate::floor_date(POKE_RainGauge_2019$DateTime, "15 minutes")
VAUL_RainGauge_2019$DateTime <- lubridate::floor_date(VAUL_RainGauge_2019$DateTime, "15 minutes")

# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 702),
                          rep("storm3", 250),
                          rep("storm4", 256),
                          rep("storm5", 266),
                          rep("storm6a", 114),
                          rep("storm6b", 95),
                          rep("storm6c", 223),
                          rep("storm6d", 479),
                          rep("storm7a", 166),
                          rep("storm7b", 84),
                          rep("storm7c", 430),
                          rep("storm8", 174),
                          rep("storm9", 530))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2019.storms.1<- left_join(MOOS_storms, FRCH_RainGauge_2019, by = "DateTime")

names(MOOS.2019.storms.1)[names(MOOS.2019.storms.1) == ''] <- 'x'

MOOS.2019.per.storm.1 <- MOOS.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "MOOS" & response == "turb")

HI.moos.no3 <- left_join(HI.mean.precip.moos.NO3, MOOS.2019.per.storm.1, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3$HI ~ HI.moos.no3$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.fDOM <- left_join(HI.mean.precip.moos.fDOM, MOOS.2019.per.storm.1, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM$HI ~ HI.moos.fDOM$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC <- left_join(HI.mean.precip.moos.SPC, MOOS.2019.per.storm.1, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC$HI ~ HI.moos.SPC$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb <- left_join(HI.mean.precip.moos.turb, MOOS.2019.per.storm.1, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb$HI ~ HI.moos.turb$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 



sum.time <- MOOS.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.moos.no3.2 <- left_join(HI.moos.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2$TOTAL.TIME <- as.numeric(HI.moos.no3.2$TOTAL.TIME)
HI.moos.no3.2$Intensity <- HI.moos.no3.2$precip/HI.moos.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2$HI ~ HI.moos.no3.2$precip + HI.moos.no3.2$Intensity) # model one with total precip and intensity 

HI.moos.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2 <- left_join(HI.moos.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2$TOTAL.TIME)
HI.moos.fDOM.2$Intensity <- HI.moos.fDOM.2$precip/HI.moos.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2$HI ~ HI.moos.fDOM.2$precip + HI.moos.fDOM.2$Intensity) # model one with total precip and intensity 

HI.moos.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2 <- left_join(HI.moos.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2$TOTAL.TIME <- as.numeric(HI.moos.SPC.2$TOTAL.TIME)
HI.moos.SPC.2$Intensity <- HI.moos.SPC.2$precip/HI.moos.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2$HI ~ HI.moos.SPC.2$precip + HI.moos.SPC.2$Intensity) # model one with total precip and intensity 

HI.moos.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2 <- left_join(HI.moos.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2$TOTAL.TIME <- as.numeric(HI.moos.turb.2$TOTAL.TIME)
HI.moos.turb.2$Intensity <- HI.moos.turb.2$precip/HI.moos.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2$HI ~ HI.moos.turb.2$precip + HI.moos.turb.2$Intensity) # model one with total precip and intensity 

HI.moos.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# FRCH # 
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="FRCH", 
                                  full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 993),
                          rep("storm10a", 121),
                          rep("storm10b", 95),
                          rep("storm10c", 207),
                          rep("storm11", 479),
                          rep("storm12a", 183),
                          rep("storm12b", 67),
                          rep("storm12c", 511),
                          rep("storm12d", 855),
                          rep("storm13", 391),
                          rep("storm14", 631),
                          rep("storm2", 113),
                          rep("storm3", 201),
                          rep("storm4", 193),
                          rep("storm5", 229),
                          rep("storm6", 257),
                          rep("storm7", 133),
                          rep("storm8", 105),
                          rep("storm9a", 61),
                          rep("storm9b", 149))
                          
                          

FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2019.storms.1<- left_join(FRCH_storms, FRCH_RainGauge_2019, by = "DateTime")

names(FRCH.2019.storms.1)[names(FRCH.2019.storms.1) == ''] <- 'x'

FRCH.2019.per.storm.1 <- FRCH.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "FRCH" & response == "turb")

HI.frch.no3 <- left_join(HI.mean.precip.frch.NO3, FRCH.2019.per.storm.1, by = "storm.num")

frch.lm.no3 <- lm(HI.frch.no3$HI ~ HI.frch.no3$precip) # model one with just total precip

frch.formula <- y ~ x

HI.frch.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.fDOM <- left_join(HI.mean.precip.frch.fDOM, FRCH.2019.per.storm.1, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM$HI ~ HI.frch.fDOM$precip) # model one with just total precip

frch.formula <- y ~ x

HI.frch.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.SPC <- left_join(HI.mean.precip.frch.SPC, FRCH.2019.per.storm.1, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC$HI ~ HI.frch.SPC$precip) # model one with just total precip


HI.frch.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.turb <- left_join(HI.mean.precip.frch.turb, FRCH.2019.per.storm.1, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb$HI ~ HI.frch.turb$precip) # model one with just total precip

HI.frch.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 



sum.time <- FRCH.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.frch.no3.2 <- left_join(HI.frch.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2$TOTAL.TIME <- as.numeric(HI.frch.no3.2$TOTAL.TIME)
HI.frch.no3.2$Intensity <- HI.frch.no3.2$precip/HI.frch.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2$HI ~ HI.frch.no3.2$precip + HI.frch.no3.2$Intensity) # model one with total precip and intensity 

HI.frch.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2 <- left_join(HI.frch.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2$TOTAL.TIME)
HI.frch.fDOM.2$Intensity <- HI.frch.fDOM.2$precip/HI.frch.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2$HI ~ HI.frch.fDOM.2$precip + HI.frch.fDOM.2$Intensity) # model one with total precip and intensity 

HI.frch.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2 <- left_join(HI.frch.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2$TOTAL.TIME <- as.numeric(HI.frch.SPC.2$TOTAL.TIME)
HI.frch.SPC.2$Intensity <- HI.frch.SPC.2$precip/HI.frch.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2$HI ~ HI.frch.SPC.2$precip + HI.frch.SPC.2$Intensity) # model one with total precip and intensity 

HI.frch.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2 <- left_join(HI.frch.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2$TOTAL.TIME <- as.numeric(HI.frch.turb.2$TOTAL.TIME)
HI.frch.turb.2$Intensity <- HI.frch.turb.2$precip/HI.frch.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2$HI ~ HI.frch.turb.2$precip + HI.frch.turb.2$Intensity) # model one with total precip and intensity 

HI.frch.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# POKE # 
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="POKE", 
                                  full.names=TRUE)

POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

POKE_storms$storm.num = c(rep("storm1", 103),
                          rep("storm2", 91),
                          rep("storm3", 147),
                          rep("storm4", 115),
                          rep("storm5a", 87),
                          rep("storm5b", 239),
                          rep("storm5c", 111),
                          rep("storm5d", 99),
                          rep("storm6a", 51),
                          rep("storm6b", 227),
                          rep("storm7", 267),
                          rep("storm8", 95),
                          rep("storm9", 211))



POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
POKE.2019.storms.1<- left_join(POKE_storms, POKE_RainGauge_2019, by = "DateTime")

names(POKE.2019.storms.1)[names(POKE.2019.storms.1) == ''] <- 'x'

POKE.2019.per.storm.1 <- POKE.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.poke.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "NO3")
HI.mean.precip.poke.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "fDOM")
HI.mean.precip.poke.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "SPC")
HI.mean.precip.poke.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "turb")

HI.poke.no3 <- left_join(HI.mean.precip.poke.NO3, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.no3 <- lm(HI.poke.no3$HI ~ HI.poke.no3$precip) # model one with just total precip

poke.formula <- y ~ x

HI.poke.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.fDOM <- left_join(HI.mean.precip.poke.fDOM, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.fDOM <- lm(HI.poke.fDOM$HI ~ HI.poke.fDOM$precip) # model one with just total precip

HI.poke.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.SPC <- left_join(HI.mean.precip.poke.SPC, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.SPC <- lm(HI.poke.SPC$HI ~ HI.poke.SPC$precip) # model one with just total precip

HI.poke.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.turb <- left_join(HI.mean.precip.poke.turb, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.turb <- lm(HI.poke.turb$HI ~ HI.poke.turb$precip) # model one with just total precip

HI.poke.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- POKE.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.poke.no3.2 <- left_join(HI.poke.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.no3.2$TOTAL.TIME <- as.numeric(HI.poke.no3.2$TOTAL.TIME)
HI.poke.no3.2$Intensity <- HI.poke.no3.2$precip/HI.poke.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.no3.2 <- lm(HI.poke.no3.2$HI ~ HI.poke.no3.2$precip + HI.poke.no3.2$Intensity) # model one with total precip and intensity 

HI.poke.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2 <- left_join(HI.poke.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.fDOM.2$TOTAL.TIME <- as.numeric(HI.poke.fDOM.2$TOTAL.TIME)
HI.poke.fDOM.2$Intensity <- HI.poke.fDOM.2$precip/HI.poke.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2$HI ~ HI.poke.fDOM.2$precip + HI.poke.fDOM.2$Intensity) # model one with total precip and intensity 

HI.poke.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2 <- left_join(HI.poke.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.SPC.2$TOTAL.TIME <- as.numeric(HI.poke.SPC.2$TOTAL.TIME)
HI.poke.SPC.2$Intensity <- HI.poke.SPC.2$precip/HI.poke.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.SPC.2 <- lm(HI.poke.SPC.2$HI ~ HI.poke.SPC.2$precip + HI.poke.SPC.2$Intensity) # model one with total precip and intensity 

HI.poke.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2 <- left_join(HI.poke.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.turb.2$TOTAL.TIME <- as.numeric(HI.poke.turb.2$TOTAL.TIME)
HI.poke.turb.2$Intensity <- HI.poke.turb.2$precip/HI.poke.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.turb.2 <- lm(HI.poke.turb.2$HI ~ HI.poke.turb.2$precip + HI.poke.turb.2$Intensity) # model one with total precip and intensity 

HI.poke.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# VAUL # 
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="VAUL", 
                                  full.names=TRUE)

VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

VAUL_storms$storm.num = c(rep("storm1", 191),
                          rep("storm2", 207),
                          rep("storm3", 191),
                          rep("storm4a", 83),
                          rep("storm4b", 219),
                          rep("storm4c", 707),
                          rep("storm5", 275),
                          rep("storm6", 263),
                          rep("storm7", 107),
                          rep("storm8a", 167),
                          rep("storm8b", 223),
                          rep("storm8c", 479))



VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
VAUL.2019.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2019, by = "DateTime")

names(VAUL.2019.storms.1)[names(VAUL.2019.storms.1) == ''] <- 'x'

VAUL.2019.per.storm.1 <- VAUL.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "VAUL" & response == "turb")

HI.vaul.no3 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2019.per.storm.1, by = "storm.num")

vaul.lm.no3 <- lm(HI.vaul.no3$HI ~ HI.vaul.no3$precip) # model one with just total precip

vaul.formula <- y ~ x

HI.vaul.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.fDOM <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2019.per.storm.1, by = "storm.num")

vaul.lm.fDOM <- lm(HI.vaul.fDOM$HI ~ HI.vaul.fDOM$precip) # model one with just total precip

HI.vaul.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.SPC <- left_join(HI.mean.precip.vaul.SPC, VAUL.2019.per.storm.1, by = "storm.num")

vaul.lm.SPC <- lm(HI.vaul.SPC$HI ~ HI.vaul.SPC$precip) # model one with just total precip

HI.vaul.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.turb <- left_join(HI.mean.precip.vaul.turb, VAUL.2019.per.storm.1, by = "storm.num")

vaul.lm.turb <- lm(HI.vaul.turb$HI ~ HI.vaul.turb$precip) # model one with just total precip

HI.vaul.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- VAUL.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.vaul.no3.2 <- left_join(HI.vaul.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.no3.2$TOTAL.TIME <- as.numeric(HI.vaul.no3.2$TOTAL.TIME)
HI.vaul.no3.2$Intensity <- HI.vaul.no3.2$precip/HI.vaul.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.no3.2 <- lm(HI.vaul.no3.2$HI ~ HI.vaul.no3.2$precip + HI.vaul.no3.2$Intensity) # model one with total precip and intensity 

HI.vaul.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2 <- left_join(HI.vaul.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.fDOM.2$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2$TOTAL.TIME)
HI.vaul.fDOM.2$Intensity <- HI.vaul.fDOM.2$precip/HI.vaul.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2$HI ~ HI.vaul.fDOM.2$precip + HI.vaul.fDOM.2$Intensity) # model one with total precip and intensity 

HI.vaul.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2 <- left_join(HI.vaul.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.SPC.2$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2$TOTAL.TIME)
HI.vaul.SPC.2$Intensity <- HI.vaul.SPC.2$precip/HI.vaul.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2$HI ~ HI.vaul.SPC.2$precip + HI.vaul.SPC.2$Intensity) # model one with total precip and intensity 

HI.vaul.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2 <- left_join(HI.vaul.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.turb.2$TOTAL.TIME <- as.numeric(HI.vaul.turb.2$TOTAL.TIME)
HI.vaul.turb.2$Intensity <- HI.vaul.turb.2$precip/HI.vaul.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.turb.2 <- lm(HI.vaul.turb.2$HI ~ HI.vaul.turb.2$precip + HI.vaul.turb.2$Intensity) # model one with total precip and intensity 

HI.vaul.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# STRT # 
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="STRT", 
                                  full.names=TRUE)

STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

STRT_storms$storm.num = c(rep("storm1", 642),
                          rep("storm2", 278),
                          rep("storm3a", 1039),
                          rep("storm3b", 290),
                          rep("storm3c", 178),
                          rep("storm4", 470),
                          rep("storm5", 102),
                          rep("storm6", 250),
                          rep("storm7", 538),
                          rep("storm7b", 270))



STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
STRT.2019.storms.1<- left_join(STRT_storms, FRCH_RainGauge_2019, by = "DateTime")

names(STRT.2019.storms.1)[names(STRT.2019.storms.1) == ''] <- 'x'

STRT.2019.per.storm.1 <- STRT.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "STRT" & response == "turb")

HI.strt.no3 <- left_join(HI.mean.precip.strt.NO3, STRT.2019.per.storm.1, by = "storm.num")

strt.lm.no3 <- lm(HI.strt.no3$HI ~ HI.strt.no3$precip) # model one with just total precip

strt.formula <- y ~ x

HI.strt.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.fDOM <- left_join(HI.mean.precip.strt.fDOM, STRT.2019.per.storm.1, by = "storm.num")

strt.lm.fDOM <- lm(HI.strt.fDOM$HI ~ HI.strt.fDOM$precip) # model one with just total precip

HI.strt.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.SPC <- left_join(HI.mean.precip.strt.SPC, STRT.2019.per.storm.1, by = "storm.num")

strt.lm.SPC <- lm(HI.strt.SPC$HI ~ HI.strt.SPC$precip) # model one with just total precip

HI.strt.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.turb <- left_join(HI.mean.precip.strt.turb, STRT.2019.per.storm.1, by = "storm.num")

strt.lm.turb <- lm(HI.strt.turb$HI ~ HI.strt.turb$precip) # model one with just total precip

HI.strt.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

STRT.2019.storms.1 <- na.omit(STRT.2019.storms.1)

sum.time <- STRT.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.strt.no3.2 <- left_join(HI.strt.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.no3.2$TOTAL.TIME <- as.numeric(HI.strt.no3.2$TOTAL.TIME)
HI.strt.no3.2$Intensity <- HI.strt.no3.2$precip/HI.strt.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.no3.2 <- lm(HI.strt.no3.2$HI ~ HI.strt.no3.2$precip + HI.strt.no3.2$Intensity) # model one with total precip and intensity 

HI.strt.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2 <- left_join(HI.strt.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.fDOM.2$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2$TOTAL.TIME)
HI.strt.fDOM.2$Intensity <- HI.strt.fDOM.2$precip/HI.strt.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2$HI ~ HI.strt.fDOM.2$precip + HI.strt.fDOM.2$Intensity) # model one with total precip and intensity 

HI.strt.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2 <- left_join(HI.strt.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.SPC.2$TOTAL.TIME <- as.numeric(HI.strt.SPC.2$TOTAL.TIME)
HI.strt.SPC.2$Intensity <- HI.strt.SPC.2$precip/HI.strt.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.SPC.2 <- lm(HI.strt.SPC.2$HI ~ HI.strt.SPC.2$precip + HI.strt.SPC.2$Intensity) # model one with total precip and intensity 

HI.strt.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2 <- left_join(HI.strt.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.turb.2$TOTAL.TIME <- as.numeric(HI.strt.turb.2$TOTAL.TIME)
HI.strt.turb.2$Intensity <- HI.strt.turb.2$precip/HI.strt.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.turb.2 <- lm(HI.strt.turb.2$HI ~ HI.strt.turb.2$precip + HI.strt.turb.2$Intensity) # model one with total precip and intensity 

HI.strt.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

############################################# 2020 ################################################################
# import rain gauge data #
FRCH_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/FRCH.RainGauge.2020.csv")
POKE_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/POKE.RainGauge.2020.csv")
VAUL_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/VAUL.RainGauge.2020.csv")
STRT_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/STRT.RainGauge.2020.csv")

# convert to AK time 
FRCH_RainGauge_2020$DateTime <- as.POSIXct(FRCH_RainGauge_2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
POKE_RainGauge_2020$DateTime <- as.POSIXct(POKE_RainGauge_2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
VAUL_RainGauge_2020$DateTime <- as.POSIXct(VAUL_RainGauge_2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")
STRT_RainGauge_2020$DateTime <- as.POSIXct(STRT_RainGauge_2020$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M")

# round to nearest 15 min 
FRCH_RainGauge_2020$DateTime <- lubridate::floor_date(FRCH_RainGauge_2020$DateTime, "15 minutes")
POKE_RainGauge_2020$DateTime <- lubridate::floor_date(POKE_RainGauge_2020$DateTime, "15 minutes")
VAUL_RainGauge_2020$DateTime <- lubridate::floor_date(VAUL_RainGauge_2020$DateTime, "15 minutes")
STRT_RainGauge_2020$DateTime <- lubridate::floor_date(STRT_RainGauge_2020$DateTime, "15 minutes")

# MOOS # 
MOOSstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="MOOS", 
                                  full.names=TRUE)

MOOS_storms<-do.call("rbind", lapply(MOOSstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

MOOS_storms$storm.num = c(rep("storm1", 723),
                          rep("storm2", 327),
                          rep("storm3", 129),
                          rep("storm4", 321),
                          rep("storm5", 240),
                          rep("storm6a", 108),
                          rep("storm6b", 272),
                          rep("storm7a", 276),
                          rep("storm7b", 186),
                          rep("storm8", 195),
                          rep("storm9", 405))

MOOS_storms$DateTime <- as.POSIXct(MOOS_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
MOOS.2020.storms.1<- left_join(MOOS_storms, FRCH_RainGauge_2020, by = "DateTime")

names(MOOS.2020.storms.1)[names(MOOS.2020.storms.1) == ''] <- 'x'

MOOS.2020.per.storm.1 <- MOOS.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.moos.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "NO3")
HI.mean.precip.moos.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "fDOM")
HI.mean.precip.moos.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "SPC")
HI.mean.precip.moos.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "MOOS" & response == "turb")

HI.moos.no3 <- left_join(HI.mean.precip.moos.NO3, MOOS.2020.per.storm.1, by = "storm.num")

moos.lm.no3 <- lm(HI.moos.no3$HI ~ HI.moos.no3$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.fDOM <- left_join(HI.mean.precip.moos.fDOM, MOOS.2020.per.storm.1, by = "storm.num")

moos.lm.fDOM <- lm(HI.moos.fDOM$HI ~ HI.moos.fDOM$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.SPC <- left_join(HI.mean.precip.moos.SPC, MOOS.2020.per.storm.1, by = "storm.num")

moos.lm.SPC <- lm(HI.moos.SPC$HI ~ HI.moos.SPC$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.moos.turb <- left_join(HI.mean.precip.moos.turb, MOOS.2020.per.storm.1, by = "storm.num")

moos.lm.turb <- lm(HI.moos.turb$HI ~ HI.moos.turb$precip) # model one with just total precip

moos.formula <- y ~ x

HI.moos.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 



sum.time <- MOOS.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.moos.no3.2 <- left_join(HI.moos.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.no3.2$TOTAL.TIME <- as.numeric(HI.moos.no3.2$TOTAL.TIME)
HI.moos.no3.2$Intensity <- HI.moos.no3.2$precip/HI.moos.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.no3.2 <- lm(HI.moos.no3.2$HI ~ HI.moos.no3.2$precip + HI.moos.no3.2$Intensity) # model one with total precip and intensity 

HI.moos.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.fDOM.2 <- left_join(HI.moos.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.fDOM.2$TOTAL.TIME <- as.numeric(HI.moos.fDOM.2$TOTAL.TIME)
HI.moos.fDOM.2$Intensity <- HI.moos.fDOM.2$precip/HI.moos.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.fDOM.2 <- lm(HI.moos.fDOM.2$HI ~ HI.moos.fDOM.2$precip + HI.moos.fDOM.2$Intensity) # model one with total precip and intensity 

HI.moos.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.SPC.2 <- left_join(HI.moos.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.SPC.2$TOTAL.TIME <- as.numeric(HI.moos.SPC.2$TOTAL.TIME)
HI.moos.SPC.2$Intensity <- HI.moos.SPC.2$precip/HI.moos.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.SPC.2 <- lm(HI.moos.SPC.2$HI ~ HI.moos.SPC.2$precip + HI.moos.SPC.2$Intensity) # model one with total precip and intensity 

HI.moos.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.moos.turb.2 <- left_join(HI.moos.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.moos.turb.2$TOTAL.TIME <- as.numeric(HI.moos.turb.2$TOTAL.TIME)
HI.moos.turb.2$Intensity <- HI.moos.turb.2$precip/HI.moos.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

moos.lm.turb.2 <- lm(HI.moos.turb.2$HI ~ HI.moos.turb.2$precip + HI.moos.turb.2$Intensity) # model one with total precip and intensity 

HI.moos.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = moos.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("MOOS turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# FRCH # 
FRCHstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="FRCH", 
                                  full.names=TRUE)

FRCH_storms<-do.call("rbind", lapply(FRCHstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

FRCH_storms$storm.num = c(rep("storm1", 487),
                          rep("storm10a", 255),
                          rep("storm10b", 455),
                          rep("storm11", 91),
                          rep("storm12", 67),
                          rep("storm2", 107),
                          rep("storm3a", 159),
                          rep("storm3b", 431),
                          rep("storm3c", 159),
                          rep("storm4a", 187),
                          rep("storm4b", 203),
                          rep("storm5", 28),
                          rep("storm6", 103),
                          rep("storm7", 339),
                          rep("storm8", 383),
                          rep("storm9a", 139),
                          rep("storm9b", 272))
                          



FRCH_storms$DateTime <- as.POSIXct(FRCH_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
FRCH.2020.storms.1<- left_join(FRCH_storms, FRCH_RainGauge_2020, by = "DateTime")

names(FRCH.2020.storms.1)[names(FRCH.2020.storms.1) == ''] <- 'x'

FRCH.2020.per.storm.1 <- FRCH.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.frch.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "NO3")
HI.mean.precip.frch.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "fDOM")
HI.mean.precip.frch.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "SPC")
HI.mean.precip.frch.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "FRCH" & response == "turb")

HI.frch.no3 <- left_join(HI.mean.precip.frch.NO3, FRCH.2020.per.storm.1, by = "storm.num")

frch.lm.no3 <- lm(HI.frch.no3$HI ~ HI.frch.no3$precip) # model one with just total precip

frch.formula <- y ~ x

HI.frch.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.fDOM <- left_join(HI.mean.precip.frch.fDOM, FRCH.2020.per.storm.1, by = "storm.num")

frch.lm.fDOM <- lm(HI.frch.fDOM$HI ~ HI.frch.fDOM$precip) # model one with just total precip

frch.formula <- y ~ x

HI.frch.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.SPC <- left_join(HI.mean.precip.frch.SPC, FRCH.2020.per.storm.1, by = "storm.num")

frch.lm.SPC <- lm(HI.frch.SPC$HI ~ HI.frch.SPC$precip) # model one with just total precip


HI.frch.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.frch.turb <- left_join(HI.mean.precip.frch.turb, FRCH.2020.per.storm.1, by = "storm.num")

frch.lm.turb <- lm(HI.frch.turb$HI ~ HI.frch.turb$precip) # model one with just total precip

HI.frch.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- FRCH.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.frch.no3.2 <- left_join(HI.frch.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.no3.2$TOTAL.TIME <- as.numeric(HI.frch.no3.2$TOTAL.TIME)
HI.frch.no3.2$Intensity <- HI.frch.no3.2$precip/HI.frch.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.no3.2 <- lm(HI.frch.no3.2$HI ~ HI.frch.no3.2$precip + HI.frch.no3.2$Intensity) # model one with total precip and intensity 

HI.frch.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.fDOM.2 <- left_join(HI.frch.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.fDOM.2$TOTAL.TIME <- as.numeric(HI.frch.fDOM.2$TOTAL.TIME)
HI.frch.fDOM.2$Intensity <- HI.frch.fDOM.2$precip/HI.frch.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.fDOM.2 <- lm(HI.frch.fDOM.2$HI ~ HI.frch.fDOM.2$precip + HI.frch.fDOM.2$Intensity) # model one with total precip and intensity 

HI.frch.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.SPC.2 <- left_join(HI.frch.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.SPC.2$TOTAL.TIME <- as.numeric(HI.frch.SPC.2$TOTAL.TIME)
HI.frch.SPC.2$Intensity <- HI.frch.SPC.2$precip/HI.frch.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.SPC.2 <- lm(HI.frch.SPC.2$HI ~ HI.frch.SPC.2$precip + HI.frch.SPC.2$Intensity) # model one with total precip and intensity 

HI.frch.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.frch.turb.2 <- left_join(HI.frch.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.frch.turb.2$TOTAL.TIME <- as.numeric(HI.frch.turb.2$TOTAL.TIME)
HI.frch.turb.2$Intensity <- HI.frch.turb.2$precip/HI.frch.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

frch.lm.turb.2 <- lm(HI.frch.turb.2$HI ~ HI.frch.turb.2$precip + HI.frch.turb.2$Intensity) # model one with total precip and intensity 

HI.frch.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = frch.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("FRCH turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# POKE # 
POKEstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2019/AllSites/", 
                                  recursive=F, 
                                  pattern="POKE", 
                                  full.names=TRUE)

POKE_storms<-do.call("rbind", lapply(POKEstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

POKE_storms$storm.num = c(rep("storm1", 103),
                          rep("storm2", 91),
                          rep("storm3", 147),
                          rep("storm4", 115),
                          rep("storm5a", 87),
                          rep("storm5b", 239),
                          rep("storm5c", 111),
                          rep("storm5d", 99),
                          rep("storm6a", 51),
                          rep("storm6b", 227),
                          rep("storm7", 267),
                          rep("storm8", 95),
                          rep("storm9", 211))



POKE_storms$DateTime <- as.POSIXct(POKE_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
POKE.2019.storms.1<- left_join(POKE_storms, POKE_RainGauge_2019, by = "DateTime")

names(POKE.2019.storms.1)[names(POKE.2019.storms.1) == ''] <- 'x'

POKE.2019.per.storm.1 <- POKE.2019.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.poke.NO3 <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "NO3")
HI.mean.precip.poke.fDOM <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "fDOM")
HI.mean.precip.poke.SPC <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "SPC")
HI.mean.precip.poke.turb <- subset(HI.mean.precip.response, year == "2019" & site.ID == "POKE" & response == "turb")

HI.poke.no3 <- left_join(HI.mean.precip.poke.NO3, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.no3 <- lm(HI.poke.no3$HI ~ HI.poke.no3$precip) # model one with just total precip

poke.formula <- y ~ x

HI.poke.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.fDOM <- left_join(HI.mean.precip.poke.fDOM, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.fDOM <- lm(HI.poke.fDOM$HI ~ HI.poke.fDOM$precip) # model one with just total precip

HI.poke.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.SPC <- left_join(HI.mean.precip.poke.SPC, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.SPC <- lm(HI.poke.SPC$HI ~ HI.poke.SPC$precip) # model one with just total precip

HI.poke.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.poke.turb <- left_join(HI.mean.precip.poke.turb, POKE.2019.per.storm.1, by = "storm.num")

poke.lm.turb <- lm(HI.poke.turb$HI ~ HI.poke.turb$precip) # model one with just total precip

HI.poke.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- POKE.2019.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.poke.no3.2 <- left_join(HI.poke.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.no3.2$TOTAL.TIME <- as.numeric(HI.poke.no3.2$TOTAL.TIME)
HI.poke.no3.2$Intensity <- HI.poke.no3.2$precip/HI.poke.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.no3.2 <- lm(HI.poke.no3.2$HI ~ HI.poke.no3.2$precip + HI.poke.no3.2$Intensity) # model one with total precip and intensity 

HI.poke.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.fDOM.2 <- left_join(HI.poke.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.fDOM.2$TOTAL.TIME <- as.numeric(HI.poke.fDOM.2$TOTAL.TIME)
HI.poke.fDOM.2$Intensity <- HI.poke.fDOM.2$precip/HI.poke.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.fDOM.2 <- lm(HI.poke.fDOM.2$HI ~ HI.poke.fDOM.2$precip + HI.poke.fDOM.2$Intensity) # model one with total precip and intensity 

HI.poke.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.SPC.2 <- left_join(HI.poke.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.SPC.2$TOTAL.TIME <- as.numeric(HI.poke.SPC.2$TOTAL.TIME)
HI.poke.SPC.2$Intensity <- HI.poke.SPC.2$precip/HI.poke.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.SPC.2 <- lm(HI.poke.SPC.2$HI ~ HI.poke.SPC.2$precip + HI.poke.SPC.2$Intensity) # model one with total precip and intensity 

HI.poke.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.poke.turb.2 <- left_join(HI.poke.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.poke.turb.2$TOTAL.TIME <- as.numeric(HI.poke.turb.2$TOTAL.TIME)
HI.poke.turb.2$Intensity <- HI.poke.turb.2$precip/HI.poke.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

poke.lm.turb.2 <- lm(HI.poke.turb.2$HI ~ HI.poke.turb.2$precip + HI.poke.turb.2$Intensity) # model one with total precip and intensity 

HI.poke.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = poke.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("POKE turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# VAUL # 
VAULstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="VAUL", 
                                  full.names=TRUE)

VAUL_storms<-do.call("rbind", lapply(VAULstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

VAUL_storms$storm.num = c(rep("storm10", 195),
                          rep("storm11", 400),
                          rep("storm12", 171),
                          rep("storm13", 319),
                          rep("storm14", 227),
                          rep("storm1a", 107),
                          rep("storm1b", 238),
                          rep("storm1c", 502),
                          rep("storm2", 210),
                          rep("storm3", 338),
                          rep("storm4", 322),
                          rep("storm5", 222),
                          rep("storm6a", 107),
                          rep("storm6b", 507),
                          rep("storm7", 284),
                          rep("storm8", 91),
                          rep("storm9", 91))



VAUL_storms$DateTime <- as.POSIXct(VAUL_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
VAUL.2020.storms.1<- left_join(VAUL_storms, VAUL_RainGauge_2020, by = "DateTime")

names(VAUL.2020.storms.1)[names(VAUL.2020.storms.1) == ''] <- 'x'

VAUL.2020.per.storm.1 <- VAUL.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.vaul.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "NO3")
HI.mean.precip.vaul.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "fDOM")
HI.mean.precip.vaul.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "SPC")
HI.mean.precip.vaul.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "VAUL" & response == "turb")

HI.vaul.no3 <- left_join(HI.mean.precip.vaul.NO3, VAUL.2020.per.storm.1, by = "storm.num")

vaul.lm.no3 <- lm(HI.vaul.no3$HI ~ HI.vaul.no3$precip) # model one with just total precip

vaul.formula <- y ~ x

HI.vaul.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.fDOM <- left_join(HI.mean.precip.vaul.fDOM, VAUL.2020.per.storm.1, by = "storm.num")

vaul.lm.fDOM <- lm(HI.vaul.fDOM$HI ~ HI.vaul.fDOM$precip) # model one with just total precip

HI.vaul.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.SPC <- left_join(HI.mean.precip.vaul.SPC, VAUL.2020.per.storm.1, by = "storm.num")

vaul.lm.SPC <- lm(HI.vaul.SPC$HI ~ HI.vaul.SPC$precip) # model one with just total precip

HI.vaul.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.vaul.turb <- left_join(HI.mean.precip.vaul.turb, VAUL.2020.per.storm.1, by = "storm.num")

vaul.lm.turb <- lm(HI.vaul.turb$HI ~ HI.vaul.turb$precip) # model one with just total precip

HI.vaul.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 


sum.time <- VAUL.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.vaul.no3.2 <- left_join(HI.vaul.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.no3.2$TOTAL.TIME <- as.numeric(HI.vaul.no3.2$TOTAL.TIME)
HI.vaul.no3.2$Intensity <- HI.vaul.no3.2$precip/HI.vaul.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.no3.2 <- lm(HI.vaul.no3.2$HI ~ HI.vaul.no3.2$precip + HI.vaul.no3.2$Intensity) # model one with total precip and intensity 

HI.vaul.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.fDOM.2 <- left_join(HI.vaul.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.fDOM.2$TOTAL.TIME <- as.numeric(HI.vaul.fDOM.2$TOTAL.TIME)
HI.vaul.fDOM.2$Intensity <- HI.vaul.fDOM.2$precip/HI.vaul.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.fDOM.2 <- lm(HI.vaul.fDOM.2$HI ~ HI.vaul.fDOM.2$precip + HI.vaul.fDOM.2$Intensity) # model one with total precip and intensity 

HI.vaul.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.SPC.2 <- left_join(HI.vaul.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.SPC.2$TOTAL.TIME <- as.numeric(HI.vaul.SPC.2$TOTAL.TIME)
HI.vaul.SPC.2$Intensity <- HI.vaul.SPC.2$precip/HI.vaul.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.SPC.2 <- lm(HI.vaul.SPC.2$HI ~ HI.vaul.SPC.2$precip + HI.vaul.SPC.2$Intensity) # model one with total precip and intensity 

HI.vaul.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.vaul.turb.2 <- left_join(HI.vaul.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.vaul.turb.2$TOTAL.TIME <- as.numeric(HI.vaul.turb.2$TOTAL.TIME)
HI.vaul.turb.2$Intensity <- HI.vaul.turb.2$precip/HI.vaul.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

vaul.lm.turb.2 <- lm(HI.vaul.turb.2$HI ~ HI.vaul.turb.2$precip + HI.vaul.turb.2$Intensity) # model one with total precip and intensity 

HI.vaul.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = vaul.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("VAUL turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

# STRT # 
STRTstorm_file_list <- list.files(path="~/Documents/Storms/Storm_Events/2020/AllSites/", 
                                  recursive=F, 
                                  pattern="STRT", 
                                  full.names=TRUE)

STRT_storms<-do.call("rbind", lapply(STRTstorm_file_list, 
                                     read.csv, 
                                     check.names = FALSE,
                                     stringsAsFactors=FALSE, 
                                     header=T, blank.lines.skip = TRUE, fill=TRUE))

STRT_storms$storm.num = c(rep("storm10", 246),
                          rep("storm1a", 95),
                          rep("storm1b", 157),
                          rep("storm1c", 105),
                          rep("storm1d", 78),
                          rep("storm1e", 476),
                          rep("storm2", 166),
                          rep("storm3", 418),
                          rep("storm4a", 152),
                          rep("storm4b", 322),
                          rep("storm5", 250),
                          rep("storm6", 90),
                          rep("storm7a", 98),
                          rep("storm7b", 95),
                          rep("storm8", 178),
                          rep("storm9a", 294),
                          rep("storm9b", 134),
                          rep("storm9c", 482))



STRT_storms$DateTime <- as.POSIXct(STRT_storms$DateTime, tz = "America/Anchorage", format = "%Y-%m-%d %H:%M") 
STRT.2020.storms.1<- left_join(STRT_storms, STRT_RainGauge_2020, by = "DateTime")

names(STRT.2020.storms.1)[names(STRT.2020.storms.1) == ''] <- 'x'

STRT.2020.per.storm.1 <- STRT.2020.storms.1 %>% group_by(storm.num) %>% 
  summarise_at(vars(inst_rainfall_mm), list(precip = sum), na.rm = TRUE)

HI.mean.precip.strt.NO3 <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "NO3")
HI.mean.precip.strt.fDOM <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "fDOM")
HI.mean.precip.strt.SPC <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "SPC")
HI.mean.precip.strt.turb <- subset(HI.mean.precip.response, year == "2020" & site.ID == "STRT" & response == "turb")

HI.strt.no3 <- left_join(HI.mean.precip.strt.NO3, STRT.2020.per.storm.1, by = "storm.num")

strt.lm.no3 <- lm(HI.strt.no3$HI ~ HI.strt.no3$precip) # model one with just total precip

strt.formula <- y ~ x

HI.strt.no3 %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.fDOM <- left_join(HI.mean.precip.strt.fDOM, STRT.2020.per.storm.1, by = "storm.num")

strt.lm.fDOM <- lm(HI.strt.fDOM$HI ~ HI.strt.fDOM$precip) # model one with just total precip

HI.strt.fDOM %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.SPC <- left_join(HI.mean.precip.strt.SPC, STRT.2020.per.storm.1, by = "storm.num")

strt.lm.SPC <- lm(HI.strt.SPC$HI ~ HI.strt.SPC$precip) # model one with just total precip

HI.strt.SPC %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 

HI.strt.turb <- left_join(HI.mean.precip.strt.turb, STRT.2020.per.storm.1, by = "storm.num")

strt.lm.turb <- lm(HI.strt.turb$HI ~ HI.strt.turb$precip) # model one with just total precip

HI.strt.turb %>%
  ggplot(aes(x=precip, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Precip") +
  ylab("HI-Solute Storage") # plot model 



sum.time <- STRT.2020.storms.1 %>%
  mutate(grp=data.table::rleid(storm.num))%>%
  group_by(grp) %>%
  summarise(storm.num=max(storm.num),TOTAL.TIME=difftime(max(DateTime),
                                                         min(DateTime),units="hour"))%>%
  group_by(storm.num) %>%
  summarise(TOTAL.TIME=sum(TOTAL.TIME)) # creating a total time column


HI.strt.no3.2 <- left_join(HI.strt.no3, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.no3.2$TOTAL.TIME <- as.numeric(HI.strt.no3.2$TOTAL.TIME)
HI.strt.no3.2$Intensity <- HI.strt.no3.2$precip/HI.strt.no3.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.no3.2 <- lm(HI.strt.no3.2$HI ~ HI.strt.no3.2$precip + HI.strt.no3.2$Intensity) # model one with total precip and intensity 

HI.strt.no3.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT NO3") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.fDOM.2 <- left_join(HI.strt.fDOM, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.fDOM.2$TOTAL.TIME <- as.numeric(HI.strt.fDOM.2$TOTAL.TIME)
HI.strt.fDOM.2$Intensity <- HI.strt.fDOM.2$precip/HI.strt.fDOM.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.fDOM.2 <- lm(HI.strt.fDOM.2$HI ~ HI.strt.fDOM.2$precip + HI.strt.fDOM.2$Intensity) # model one with total precip and intensity 

HI.strt.fDOM.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT fDOM") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.SPC.2 <- left_join(HI.strt.SPC, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.SPC.2$TOTAL.TIME <- as.numeric(HI.strt.SPC.2$TOTAL.TIME)
HI.strt.SPC.2$Intensity <- HI.strt.SPC.2$precip/HI.strt.SPC.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.SPC.2 <- lm(HI.strt.SPC.2$HI ~ HI.strt.SPC.2$precip + HI.strt.SPC.2$Intensity) # model one with total precip and intensity 

HI.strt.SPC.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT SPC") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 

HI.strt.turb.2 <- left_join(HI.strt.turb, sum.time, by = "storm.num") # merging total time per storm event and the HI per storm 
HI.strt.turb.2$TOTAL.TIME <- as.numeric(HI.strt.turb.2$TOTAL.TIME)
HI.strt.turb.2$Intensity <- HI.strt.turb.2$precip/HI.strt.turb.2$TOTAL.TIME # Intensity is total precip for individual storm divided by total time so we get mm/hr

strt.lm.turb.2 <- lm(HI.strt.turb.2$HI ~ HI.strt.turb.2$precip + HI.strt.turb.2$Intensity) # model one with total precip and intensity 

HI.strt.turb.2 %>%
  ggplot(aes(x=Intensity, 
             y=HI)) +
  geom_point() +
  geom_smooth(method = "lm") +
  stat_poly_eq(formula = strt.formula, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE) +
  ggtitle("STRT turb") +
  xlab("Intensity (mm/hr)") +
  ylab("HI-Solute Storage") +
  theme_classic() # plot model 


