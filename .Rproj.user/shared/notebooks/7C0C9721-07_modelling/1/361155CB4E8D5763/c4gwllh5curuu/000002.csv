"0","### This script reads in and plots Rain Gauge data at FRCH, STRT, VAUL, CARI, CRREL sites for 2020 from our HOBOs and POKE from LTER data ###"
"0",""
"0","#Step 1: Import raw data from HOBOware # File path directory DoD Project->2020 AK Sensors-> Rain Gauge-> ""site"""
"0","#Step 2: Plot data # HOBOware data comes in the form of cumulative precip....you have to put it in instanteous 15 minute intervals"
"0","#Step 3: output csv with Site, DateTime, and Precip"
"0",""
"0","### Import Data from our sites ###"
"0","### This script reads in and plots Rain Gauge data at FRCH, STRT, VAUL, CARI, CRREL sites for 2020 from our HOBOs and POKE from LTER data ###"
"0",""
"0","#Step 1: Import raw data from HOBOware # File path directory DoD Project->2020 AK Sensors-> Rain Gauge-> ""site"""
"0","#Step 2: Plot data # HOBOware data comes in the form of cumulative precip....you have to put it in instanteous 15 minute intervals"
"0","#Step 3: output csv with Site, DateTime, and Precip"
"0",""
"0","### Import Data from our sites ###"
"0","#strt.2020.url <- ""https://docs.google.com/spreadsheets/d/e/2PACX-1vT05dgyg07MOSVdaEFFywTuktj7TTY0ukYjp5ZckRTP5BJ9dFaq5fT0MppdTchBJseTlLSzoyuLbWNS/pub?output=csv"""
"0","#frch.2020.url <- ""https://docs.google.com/spreadsheets/d/e/2PACX-1vSXjY8hE7y3xpQs42ce8tTuqxadD-9GSLdlzmlzapcdxZoYwZ0M3GOjrQfKshj5Cw1XlPMICGK2v51L/pub?output=csv"""
"0","#vaul.2020.url <- ""https://docs.google.com/spreadsheets/d/e/2PACX-1vTd-IH6XcwWpzDQav6eQO5NBzV2XB3XzCwJdxHarSiOniu57EoqegV8vU4eF8bo_8REcr8SxsXaDMpR/pub?output=csv"""
"0","### from CPCRW Caribou Peak Met Station ###"
"0","#caribou.2020.url <- ""https://docs.google.com/spreadsheets/d/e/2PACX-1vSYvitZk-JWF9bNRKvg2EWyAzt3YPPnWm3UioUEEyoMXaUkZSJRov-R0bk9nMOoXP1CcyyBtELi1_ZF/pub?output=csv"""
"0","### from CPCRW CRREL Main Met Station ###"
"0","#crrel.2020.url <- ""https://docs.google.com/spreadsheets/d/e/2PACX-1vTNOk0Gqqc-CqnXO220DIWIeGP9RQLMNEC54QAn-civk5a6Fb_Y3Z3oBNpJNAni46foqRkyytes9GT8/pub?output=csv"""
"0",""
"0","# read in data # "
"0","#strt.2020.gauge <- read.csv(url(strt.2020.url), skip = 1)"
"0","#frch.2020.gauge <- read.csv(url(frch.2020.url), skip = 1)                       "
"0","#vaul.2020.gauge <- read.csv(url(vaul.2020.url), skip = 1)"
"0","#caribou.2020.gauge <- read.csv(url(caribou.2020.url), skip = 4)"
"0","#crrel.2020.gauge <- read.csv(url(crrel.2020.url), skip = 4)"
"0",""
"0","#caribou.2020.gauge$Site <- ""CARI"" # adding a site column"
"0","#crrel.2020.gauge$Site <- ""CRREL"" # adding a site column"
"0","### Rename columns ###"
"0","#names(strt.2020.gauge) <- c(""Site"", ""DateTimeGMT"", ""Precip"")"
"0","#names(frch.2020.gauge) <- c(""Site"", ""DateTimeGMT"", ""Precip"")"
"0","#names(vaul.2020.gauge) <- c(""Site"", ""DateTimeGMT"", ""Precip"")"
"0","#names(caribou.2020.gauge) <- c(""DateTimeGMT"", ""Precip"", ""Site"")"
"0","#names(crrel.2020.gauge) <- c(""DateTimeGMT"", ""Precip"", ""Site"")"
"0",""
"0","#strt.2020.gauge$Site <- ""STRT"" # adding a site column"
"0","#frch.2020.gauge$Site <- ""FRCH"" # adding a site column"
"0","#vaul.2020.gauge$Site <- ""VAUL"" # adding a site column"
"0",""
"0","# Input NA for missing time #"
"0","#strt.2020.gauge$DateTimeGMT[strt.2020.gauge$DateTimeGMT == """"] <- NA"
"0","#frch.2020.gauge$DateTimeGMT[frch.2020.gauge$DateTimeGMT == """"] <- NA"
"0","#vaul.2020.gauge$DateTimeGMT[vaul.2020.gauge$DateTimeGMT == """"] <- NA"
"0","#caribou.2020.gauge$DateTimeGMT[caribou.2020.gauge$DateTimeGMT == """"] <- NA"
"0","#crrel.2020.gauge$DateTimeGMT[crrel.2020.gauge$DateTimeGMT == """"] <- NA"
"0",""
"0",""
"0","# Convert time and put in AK time #"
"0","#strt.2020.gauge$DateTime <- mdy_hms(strt.2020.gauge$DateTimeGMT, tz = ""GMT"")"
"0","#attributes(strt.2020.gauge$DateTime)$tzone <- 'America/Anchorage'"
"0",""
"0","#frch.2020.gauge$DateTime <- mdy_hms(frch.2020.gauge$DateTimeGMT, tz = ""GMT"")"
"0","#attributes(frch.2020.gauge$DateTime)$tzone <- 'America/Anchorage'"
"0",""
"0","#vaul.2020.gauge$DateTime <- mdy_hms(vaul.2020.gauge$DateTimeGMT, tz = ""GMT"")"
"0","#attributes(vaul.2020.gauge$DateTime)$tzone <- 'America/Anchorage'"
"0",""
"0","#caribou.2020.gauge$DateTime = as.POSIXct(caribou.2020.gauge$DateTimeGMT, ""%m/%d/%y %H:%M"", tz=""America/Anchorage"")"
"0","#crrel.2020.gauge$DateTime = as.POSIXct(crrel.2020.gauge$DateTimeGMT, ""%m/%d/%y %H:%M"", tz=""America/Anchorage"")"
"0",""
"0","# Plot data #"
"0","#STRT.2020.RAIN <- ggplot(strt.2020.gauge) +"
"0"," # geom_line(aes(x = DateTime, y = Precip)) +"
"0","  #xlab(""Date"") +"
"0","  #ylab(""Cumulative Precipitation (mm)"") +"
"0","  #ggtitle(""Stuart 2020 Rain Gauge"")"
"0",""
"0","#STRT.2020.RAIN"
"0",""
"0","#FRCH.2020.RAIN <- ggplot(frch.2020.gauge) + "
"0"," # geom_line(aes(x = DateTime, y = Precip)) +"
"0","  #xlab(""Date"") +"
"0","#ylab(""Cumulative Precipitation (mm)"") +"
"0"," # ggtitle(""French 2020 Rain Gauge"")"
"0","#FRCH.2020.RAIN"
"0",""
"0","#VAUL.2020.RAIN <- ggplot(vaul.2020.gauge) +"
"0","#  geom_line(aes(x = DateTime, y = Precip)) +"
"0","#  xlab(""Date"") +"
"0","#  ylab(""Cumulative Precipitation (mm)"") +"
"0","#  ggtitle(""Vault 2020 Rain Gauge"")"
"0","#VAUL.2020.RAIN"
"0",""
"0","#CARI.2020.RAIN <- ggplot(caribou.2020.gauge) +"
"0","#  geom_line(aes(x = DateTime, y = Precip)) +"
"0","#  xlab(""Date"") +"
"0","#  ylab(""Instanteous Precipitation (mm)"") +"
"0","#  ggtitle(""CPCRW CARI 2020 Rain Gauge"")"
"0","#CARI.2020.RAIN"
"0",""
"0","#CRREL.2020.RAIN <- ggplot(crrel.2020.gauge) +"
"0","#  geom_line(aes(x = DateTime, y = Precip)) +"
"0","#  xlab(""Date"") +"
"0","#  ylab(""Instanteous Precipitation (mm)"") +"
"0","#  ggtitle(""CPCRW CRREL 2020 Rain Gauge"")"
"0","#CRREL.2020.RAIN"
"0",""
"0","# Bind Together # Poker is going to be the average between these two rain gauges"
"0","#poke.2020.gauge <- data.frame(caribou.2020.gauge$DateTime, crrel.2020.gauge$Precip, #caribou.2020.gauge$Precip)"
"0","#poke.2020.gauge$MeanPrecip <- rowMeans(poke.2020.gauge[,c('crrel.2020.gauge.Precip', 'caribou.2020.gauge.Precip')], na.rm = TRUE)"
"0","#poke.2020.gauge$Site <- ""POKE"""
"0","#names(poke.2020.gauge) <- c(""DateTime"", ""CRREL_Precip"", ""CARI_Precip"", ""inst_rainfall_mm"", ""Site"")"
"0",""
"0","## STRT ## turn into instantaneous precip"
"0","#strt.2020.gauge$inst_rainfall_mm = 0.2"
"0",""
"0","## FRCH ##"
"0","#frch.2020.gauge$inst_rainfall_mm = 0.2"
"0",""
"0","## VAUL ##"
"0","#vaul.2020.gauge$inst_rainfall_mm = 0.2"
"0",""
"0",""
"0","#### compile into per 15 min rainfall ###"
"0",""
"0","## FRCH ##"
"0","#min<-cut(frch.2020.gauge$DateTime, breaks=""15 min"")"
"0","#FRCH.2020.st <- as.data.frame(aggregate(inst_rainfall_mm ~ min, data = frch.2020.gauge, FUN=function(x) "
"0","#  sum=sum(x)))"
"0","#FRCH.2020.st$DateTime<-as.POSIXct(FRCH.2020.st$min, ""%Y-%m-%d %H:%M:%S"", tz=""America/Anchorage"")"
"0",""
"0","## STRT ## adding FRCH data to data frame because STRT didnt have a rain gauge there until the 7/29/20"
"0","#min<-cut(strt.2020.gauge$DateTime, breaks=""15 min"")"
"0","#STRT.2020.st <- as.data.frame(aggregate(inst_rainfall_mm ~ min, data = strt.2020.gauge, FUN=function(x) "
"0","#  sum=sum(x)))"
"0","#STRT.2020.st$DateTime <-as.POSIXct(STRT.2020.st$min, ""%Y-%m-%d %H:%M:%S"", tz=""America/Anchorage"")"
"0",""
"0","#STRT.FRCH <- FRCH.2020.st[-c(438:677), ] #clipping off 7/29-on "
"0",""
"0","#STRT.2020.st <- full_join(STRT.FRCH, STRT.2020.st, by = c(""DateTime"")) #merging FRCH and STRT"
"0","#STRT.2020.st$inst_rainfall_mm <- rowMeans(STRT.2020.st[,c(2,5)], na.rm = TRUE) "
"0",""
"0","## VAUL ##"
"0","#min<-cut(vaul.2020.gauge$DateTime, breaks=""15 min"")"
"0","#VAUL.2020.st <- as.data.frame(aggregate(inst_rainfall_mm ~ min, data=vaul.2020.gauge, FUN=function(x) "
"0","#  sum=sum(x)))"
"0","#VAUL.2020.st$DateTime<-as.POSIXct(VAUL.2020.st$min, ""%Y-%m-%d %H:%M:%S"", tz=""America/Anchorage"")#"
"0",""
"0","#VAUL.FRCH <- FRCH.2020.st[-c(175:677)] #clipping off 6-22 on"
"0",""
"0","#VAUL.2020.st <- full_join(VAUL.FRCH, VAUL.2020.st) #merging FRCH and VAUL"
"0",""
"0",""
"0","#### round time to nearest 15 min ####"
"0","#STRT.2020.st$DateTime = lubridate::round_date(STRT.2020.st$DateTime, ""15 minutes"")"
"0","#FRCH.2020.st$DateTime = lubridate::round_date(FRCH.2020.st$DateTime, ""15 minutes"")"
"0","#VAUL.2020.st$DateTime = lubridate::round_date(VAUL.2020.st$DateTime, ""15 minutes"")"
"0",""
"0","### Remove columns that are not needed ###"
"0","#STRT.2020.st <- STRT.2020.st[,-c(1,2,4,5)]"
"0","#FRCH.2020.st <- FRCH.2020.st[,-c(1)]"
"0","#VAUL.2020.st <- VAUL.2020.st[,-c(1)]"
"0","#poke.2020.gauge <- poke.2020.gauge[,-c(2,3)]"
"0","#STRT.2020.st$Site <- ""STRT"""
"0","#FRCH.2020.st$Site <- ""FRCH"""
"0","#VAUL.2020.st$Site <- ""VAUL"""
"0","#### plot to check ####"
"0","#plot(STRT.2020.st$inst_rainfall_mm ~ STRT.2020.st$DateTime, type=""h"", "
"0","#     xlim=c(as.POSIXct(""2020-06-05 00:00:00""), as.POSIXct(""2020-10-21 00:00:00"")),"
"0","#     ylim=c(0,13))"
"0",""
"0","#plot(FRCH.2020.st$inst_rainfall_mm ~ FRCH.2020.st$DateTime, type=""h"", "
"0","#     xlim=c(as.POSIXct(""2020-06-05 00:00:00""), as.POSIXct(""2020-10-21 00:00:00"")),"
"0","#     ylim=c(0,13))"
"0",""
"0","#plot(VAUL.2020.st$inst_rainfall_mm ~ VAUL.2020.st$DateTime, type=""h"", "
"0","#     xlim=c(as.POSIXct(""2020-06-05 00:00:00""), as.POSIXct(""2020-10-21 00:00:00"")),"
"0","#     ylim=c(0,13))"
"0",""
"0",""
"0",""
"0","#rain.gauge.2020 <- bind_rows(strt.2020.gauge, frch.2020.gauge, vaul.2020.gauge, poke.2020.gauge)#"
"0",""
"0","#sum(frch.2020.gauge$inst_rainfall_mm)"
"0","#sum(poke.2020.gauge$inst_rainfall_mm)"
"0",""
"0","#total.precip.2020 <- ggplot(rain.gauge.2020) +"
"0","##  geom_line(aes(x = DateTime, y = Precip, color = Site)) +"
"0","#  xlab(""Date"") + "
"0","#  ylab(""Cumulative Precipitation in cm"") +"
"0","#  ggtitle(""STRT FRCH VAUL Rain Gauge"")"
"0","#total.precip.2020"
"0",""
"0",""
"0",""
